<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */



# include extensions
if($GLOBALS["gLmbExt"]["ext_gtab_erg_dao.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_gtab_erg_dao.inc"] as $key => $extfile){
		require_once($extfile);
	}
}

# ---------- Spaltenbreiten ----------------
function set_row_size($rowsize,$gtabid){
	global $db;
	global $gfield;
	global $session;
	global $action;
	global $filter;
    global $umgvar;

	$rsize = explode(";",$rowsize);
	foreach ($rsize as $bzm => $value){
		$element = explode(",",$rsize[$bzm]);
        $width = $element[1];
        $field = $element[0];
		# --- falls erste Spalte versteckt -----
		if($filter["hidecols"][$gtabid][$field] AND $bzm){
			$rsize[$bzm] = $field.','.$gfield[$gtabid]["rowsize"][$gfield[$gtabid]["field_id"][$field]];
		}else{
			$gfield[$gtabid]["rowsize"][$field] = $width;
		}
        if(!$width OR !is_numeric($width)) {
            $rsize[$bzm] = $field.','.$umgvar["default_fieldwidth"];
        }
		$bzm++;
	}
	$rowsize = implode(";",$rsize);

	$sqlquery = "SELECT ID FROM LMB_GTAB_ROWSIZE WHERE USER_ID = ".$session["user_id"]." AND TAB_ID = $gtabid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(lmbdb_fetch_row($rs)){
		$sqlquery = "UPDATE LMB_GTAB_ROWSIZE SET ROW_SIZE = '$rowsize' WHERE USER_ID = ".$session["user_id"]." AND TAB_ID = $gtabid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	}else{
		$NEXTID = next_db_id("LMB_GTAB_ROWSIZE");
		$sqlquery = "INSERT INTO LMB_GTAB_ROWSIZE (ID,USER_ID,TAB_ID,ROW_SIZE) VALUES ($NEXTID,".$session["user_id"].",$gtabid,'$rowsize')";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	}
	
	lmbGetGtabWidth($gtabid,$filter["hidecols"][$gtabid]);
}

function get_groupresult($gtabid,$group_fields,$gsr){
	global $db;
	global $session;
	global $gfield;
	global $gtab;
	global $filter;
    global $umgvar;

	foreach($group_fields as $key => $value){
		$from[] = $gfield[$gtabid]["field_name"][$value];
	}

	$query["from_"] = array();
	$query["where"] = array();

	foreach ($gfield[$gtabid]["id"] as $key => $value){
		$fid = $gfield[$gtabid]["field_id"][$key];
		if($gsr[$gtabid][$fid][0]){
			$qu = get_where($fid,$gtabid,$gsr);
			$query["from_"] = array_merge($qu["from_"],$query["from_"]);
			$query["where"] = array_merge($qu["where"],$query["where"]);
		}
	}

	if($gtab["versioning"][$gtabid]){
		$query["where"][] = "VACT = ".LMB_DBDEF_TRUE;
	}
	
	if($gtab["typ"][$gtabid] != 5){
		$query["where"][] = "DEL = ".LMB_DBDEF_FALSE;
	}

    # Multitenant
    if($umgvar['multitenant'] AND $gtab['multitenant'][$gtabid] AND !$session["superadmin"]) {
        global $lmmultitenants;

        if(!$session['mid']){
            lmb_alert('you can not access data without multitenant ID');
            return false;
        }
        if($filter["multitenant"][$gtabid]){
            $query["where"][] = $gtab['table'][$gtabid] . '.LMB_MID IN ('.implode(',',$lmmultitenants['mid']) .')';
        }else{
            $query["where"][] = $gtab['table'][$gtabid] . '.LMB_MID = '.$lmmultitenants['mid'][$session['mid']];
        }
    }

	if($query["where"]){
		$where = "WHERE ".implode(" AND ",$query["where"]);
	}
	
	if(!$filter["anzahl"][$gtabid]){$filter["anzahl"][$gtabid] = $session["maxresult"];}
	$sqlquery = "SELECT DISTINCT ".implode(",",$from)." FROM ".$gtab['table'][$gtabid]." $where ORDER BY ".implode(",",$from);
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	for($i=1; $i < $filter["anzahl"][$gtabid]; $i++) {
		if(lmbdb_fetch_row($rs)) {
			foreach($group_fields as $key => $value){
				$result_group[$i][$value] = lmbdb_result($rs, $gfield[$gtabid]['field_name'][$value]);
			}
		}
	}

	return $result_group;
}

/*----------------- Spaltenbreiten eintragen -------------------*/
if($rowsize){
	set_row_size($rowsize,$gtabid);
}

# --- Datenatz-Update -----------------------------------
if($history_fields AND $LINK[3]){
	if($old_action == "gtab_erg"){$chtyp = 2;}else{$chtyp = 1;}
	update_data($history_fields,$chtyp,$verkn);
}

/*
function getDefaultGresult($gtabid,$verkn,$form_id,$filter,$gsr,&$gresult){
    global $gformlist;

    # specific relation filter
    if($verkn){
        $vuniqueid = $gfield[$verkn['tabid']]['form_name'][$verkn['fieldid']].'_';
        cftyp_ext_RelationFields(null,$verkn['tabid'],$verkn['fieldid'],$vuniqueid,null,null,$verkn,$null,$filter,$gsr,$extension,1);
    }

	if($gformlist[$gtabid]["id"][$form_id] AND $gformlist[$gtabid]["typ"][$form_id] == 2 AND $gform[$form_id]["used_fields"]){
		$gresult = get_gresult($gtabid,1,$filter,$gsr,$verkn,$gform[$form_id]["used_fields"],null,$extension,null,1);
	}else{
		$gresult = get_gresult($gtabid,1,$filter,$gsr,$verkn,null,null,$extension,null,1);
	}
}
*/


#---- Tabellen-Abfrage -------
if(!$popg[$gtabid]['null'] AND $gtabid AND ($action == "gtab_erg" OR $action == "gtab_exp")){

	if($gformlist[$gtabid]["id"][$form_id] AND $gformlist[$gtabid]["typ"][$form_id] == 2 AND $gform[$form_id]["used_fields"]){
		$gresult = get_gresult($gtabid,1,$filter,$gsr,$verkn,$gform[$form_id]["used_fields"],null,$extension,null,1);
	}else{
		$gresult = get_gresult($gtabid,1,$filter,$gsr,$verkn,null,null,$extension,null,1);
	}

    // $gresult = null;
    // getDefaultGresult($gtabid,$verkn,$form_id,$filter,$gsr,$gresult);
}

#---- öffne alle Verknüpfungen -------
if($popup_links){
	$popup_links = explode(",",$popup_links);
	if($filter["popups"][$popup_links[0]]["all"][$popup_links[1]]){
		$filter["popups"][$popup_links[0]]["all"][$popup_links[1]] = 0;
	}else{
		$filter["popups"][$popup_links[0]]["all"][$popup_links[1]] = 1;
	}
}


if(is_numeric($filter_frame_type)){
	$filter["frame_type"][$gtabid] = $filter_frame_type;
}

?>
