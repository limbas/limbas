<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */



/**
 * list of select values
 *
 * @param unknown_type $gtabid
 * @param unknown_type $field_id
 * @param unknown_type $ID
 * @param unknown_type $find_wert
 * @param unknown_type $find_keyw
 * @param unknown_type $num_result
 * @param unknown_type $start
 * @return unknown
 */

function pool_select_list($gtabid,$field_id,$ID,$find_wert,$find_keyw,$num_result,&$start){
	global $db,$gfield,$level_id,$umgvar,$session;

	$level_id = !isset($level_id) || empty($level_id) ? 0 : intval($level_id);

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}
	
	// multilang
	if($gfield[$gtabid]['multilang'][$field_id] == 2){
		$fieldname = 'LANG'.$session['dlanguage'].'_WERT';
	}else{
		$fieldname = 'WERT';
	}

	if(!$num_result){$num_result = 30;}
	if(!$gfield[$gtabid]['select_sort'][$field_id]){$gfield[$gtabid]["select_sort"][$field_id] = "SORT";}
	if($find_wert){$where = " AND LOWER($fieldname) LIKE '%".parse_db_string(lmb_strtolower($find_wert),250)."%'";}
	if($find_keyw){$where .= " AND LOWER(KEYWORDS) LIKE '%".parse_db_string(lmb_strtolower($find_keyw),250)."%'";}
	$where .= " AND LEVEL=".parse_db_int($level_id);

	if($ID){
		$sqlquery = "SELECT COUNT(ID) AS NUMR FROM ".$tabtyp."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$field_id];
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$list["num_ges"] = lmbdb_result($rs, "NUMR");
	}

	$list["parent"] = array();
	if($level_id>0){
		$tmp = $level_id;
		while($tmp>0){
			$sqlquery = "SELECT $fieldname,LEVEL FROM ".$tabtyp."_W WHERE ID=$tmp";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs){
				$commit = 1;
				$tmp = 0;
				break;
			}else{
				$tmp = lmbdb_result($rs, "LEVEL");
				$list["parent"][$tmp] = lmbdb_result($rs, $fieldname);
			}
		}
	}

    if(!$start OR $start < 1 OR $start > $list["num_ges"]){$bzm = 1;$start = 1;}else{$bzm = $start;}

    // use Limit & Offset instead of Cursor (PDO)
    if(defined('LMB_DBFUNC_OFFSET')) {
	    $limit = " LIMIT $num_result OFFSET ".($start -1 + LMB_DBFUNC_OFFSET_START);
    }

	$sqlquery = "SELECT ID,KEYWORDS,$fieldname,SORT,LEVEL,HASLEVEL FROM ".$tabtyp."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$field_id]." $where ".($gfield[$gtabid]["select_sort"][$field_id] ? " ORDER BY ".$gfield[$gtabid]["select_sort"][$field_id] : '') . $limit;
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$bzm1 = 1;

	while(lmbdb_fetch_row($rs,$bzm) AND $bzm1 <= $num_result) {
	    $list["wert"][] = htmlentities(lmbdb_result($rs, $fieldname),ENT_QUOTES,$GLOBALS["umgvar"]["charset"]);
		$list["keywords"][] = htmlentities(lmbdb_result($rs, "KEYWORDS"),ENT_QUOTES,$GLOBALS["umgvar"]["charset"]);
		$list["haslevel"][] = lmbdb_result($rs, "HASLEVEL");
		$list["id"][] = lmbdb_result($rs, "ID");
		$bzm++;
		$bzm1++;
	}
	$list["num_rows"] = ($bzm1-1);

	/* --- Selected --------------------------------------------- */
	if($ID){
		$sqlquery = "SELECT DISTINCT ID,W_ID FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID";
		$sqlqueryc = "SELECT COUNT(*) AS RESULT FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$list["num_sel"] = lmb_num_rows($rs,$sqlqueryc);

		$bzm = 1;
		while(lmbdb_fetch_row($rs)) {
			$list["select_id"][$bzm] = lmbdb_result($rs, "W_ID");
			$bzm++;
		}
		$list["num_sel"] = $bzm-1;
	}

	if($list){return $list;}else{return false;}
}

/**
 * list select values directly
 *
 * @param int $pool_id limbas pool/attribute id
 * @param bool $attribute true for attribute, false for select pool
 * @return false|array
 */
function pool_select_list_simple($pool_id, $attribute=false){
    global $db, $action, $umgvar;

    $pool_id = parse_db_int($pool_id);

    # SELECT / ATTRIBUTE
    if ($attribute) {
        $tabtyp = 'LMB_ATTRIBUTE';
    } else {
        $tabtyp = 'LMB_SELECT';
    }

    $sqlquery = "SELECT ID,KEYWORDS,WERT,SORT,HASLEVEL FROM {$tabtyp}_W WHERE POOL = {$pool_id} ORDER BY SORT";
    $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
    if (!$rs) {
        $commit = 1;
        return false;
    }

    $values = array();
    while (lmbdb_fetch_row($rs)) {
        $values['wert'][] = htmlentities(lmbdb_result($rs, 'WERT'), ENT_QUOTES, $umgvar['charset']);
        $values['keywords'][] = htmlentities(lmbdb_result($rs, "KEYWORDS"), ENT_QUOTES, $umgvar['charset']);
        $values['haslevel'][] = lmbdb_result($rs, 'HASLEVEL');
        $values['id'][] = lmbdb_result($rs, 'ID');
    }
    return $values;
}

/**
 * adding select values
 *
 * @param unknown_type $select_add
 * @param unknown_type $wert
 * @param unknown_type $keywords
 * @param unknown_type $gtabid
 * @param unknown_type $field_id
 * @param unknown_type $ID
 * @return unknown
 */
function pool_select_add($select_add,$wert,$keywords,$gtabid,$field_id,$ID,$level_id=0){
	global $db,$session,$gfield,$umgvar;

	$level_id = !isset($level_id) || empty($level_id) ? 0 : intval($level_id);

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$typ = "LMB_ATTRIBUTE";}else{$typ = "LMB_SELECT";}
	
	// multilang
	if($gfield[$gtabid]['multilang'][$field_id] == 2){
		$fieldname = 'LANG'.$session['dlanguage'].'_WERT';
	}else{
		$fieldname = 'WERT';
	}

	if($gfield[$gtabid]["select_pool"][$field_id]){

		$wert = trim(str_replace("\t","",str_replace("\n","",$wert)));
		$keywords = trim(str_replace("\t","",str_replace("\n","",$keywords)));

		# --- vorhandensein ---
		$sqlquery = "SELECT ID FROM ".$typ."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$field_id]." AND $fieldname = '".parse_db_string($wert,255)."' AND LEVEL=".parse_db_int($level_id);
		$rs1 = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}

		if(lmbdb_fetch_row($rs1)){
			return lmbdb_result($rs1,"ID");
		}else{
			// Next Sort-ID
			lmb_StartTransaction();
			$sqlquery = "SELECT MAX(SORT) AS NEXTSORT FROM ".$typ."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$field_id]." AND LEVEL = ".parse_db_int($level_id);
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$NEXTSORT = lmbdb_result($rs,"NEXTSORT") + 1;

            // Next ID
			$NEXTID = next_db_id($typ."_W");

            // default type
            if($gfield[$gtabid]["field_type"][$field_id] == 19){
                if($gfield[$gtabid]["select_defaulttype"][$field_id]){
                    $sqlf[] = 'TYPE';
                    $sqlv[] = $gfield[$gtabid]["select_defaulttype"][$field_id];
                }
            }

            if($sqlf){
                $sqlf = ','.implode(',',$sqlf);
                $sqlv = ','.implode(',',$sqlv);
            }
			
			$sqlquery = "INSERT INTO ".$typ."_W (ID,SORT,$fieldname,KEYWORDS,ERSTUSER,POOL,LEVEL $sqlf) VALUES($NEXTID,$NEXTSORT,'".parse_db_string($wert,255)."','".parse_db_string($keywords,250)."',{$session["user_id"]},".$gfield[$gtabid]["select_pool"][$field_id].",".parse_db_int($level_id)." {$sqlv})";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}
			$select_id = $NEXTID;
			if($gfield[$gtabid]["data_type"][$field_id] == 31 OR $gfield[$gtabid]["data_type"][$field_id] == 32){
				$fs_sel[] = $select_id;
				pool_select_update($gtabid,$field_id,$ID,$fs_sel);
			}

			$sqlquery = "SELECT COUNT(ID) as ERG FROM ".$typ."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$field_id];
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$num = lmbdb_result($rs, "ERG");
			$sqlquery = "UPDATE ".$typ."_P SET SNUM = ".parse_db_int($num,1000)." WHERE ID = ".$gfield[$gtabid]["select_pool"][$field_id];
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			
			if($level_id > 0){
				$sqlquery = "UPDATE ".$typ."_W SET HASLEVEL = ".LMB_DBDEF_TRUE." WHERE ID = ".parse_db_int($level_id);
				$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}
			
			lmb_EndTransaction(!$commit);
			
			return $NEXTID;
		}
	}else{
	    return false;
	}
}



/**
 * changing select values
 *
 * @param unknown_type $change_id
 * @param unknown_type $gtabid
 * @param unknown_type $field_id
 * @param unknown_type $fs_val
 * @param unknown_type $fs_kw
 * @return unknown
 */
function pool_select_change($change_id,$gtabid,$field_id,$fs_val,$fs_kw){
	global $db;
	global $gfield;
	global $gtab;
	global $session;
	global $umgvar;

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}
	
	// multilang
	if($gfield[$gtabid]['multilang'][$field_id] == 2){
		$fieldname = 'LANG'.$session['dlanguage'].'_WERT';
	}else{
		$fieldname = 'WERT';
	}

	if($gfield[$gtabid]["select_pool"][$field_id]){
		$change_id = array_unique(explode(";",$change_id));
		foreach($change_id as $key => $value){
			if(is_numeric($value)){

				$fs_val[$value] = trim(str_replace("\t","",str_replace("\n","",$fs_val[$value])));
				$fs_kw[$value] = trim(str_replace("\t","",str_replace("\n","",$fs_kw[$value])));

				if($gfield[$gtabid]["data_type"][$field_id] == 12 OR $gfield[$gtabid]["data_type"][$field_id] == 14){
					$sqlquery = "SELECT WERT FROM ".$tabtyp."_W WHERE ID = $value AND POOL = ".$gfield[$gtabid]["select_pool"][$field_id];
					$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
					if(!$rs) {$commit = 1;}
					$oldvalue = lmbdb_result($rs,"WERT");
				}

				// update pool values
				$sqlquery = "UPDATE ".$tabtyp."_W SET $fieldname = '".parse_db_string($fs_val[$value],255)."',KEYWORDS = '".parse_db_string($fs_kw[$value],250)."' WHERE ID = $value AND POOL = ".$gfield[$gtabid]["select_pool"][$field_id];
				$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}

				// update table values
				if(($gfield[$gtabid]["data_type"][$field_id] == 12 OR $gfield[$gtabid]["data_type"][$field_id] == 14) AND $fs_val[$value]){
					$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$field_id]." = '".parse_db_string($fs_val[$value],160)."' WHERE ".$gfield[$gtabid]["field_name"][$field_id]." = '".parse_db_string($oldvalue,160)."' AND ".$gfield[$gtabid]["field_name"][$field_id]." IS NOT NULL AND ".$gfield[$gtabid]["field_name"][$field_id]." != ''";
					$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
					if(!$rs) {$commit = 1;}
				}
			}
		}
		if(!$commit){return true;}else{return false;}
	}else{return false;}
}


/**
 * drop select values
 *
 * @param unknown_type $del_id
 * @param unknown_type $gtabid
 * @param unknown_type $field_id
 * @return unknown
 */
function pool_select_delete($del_id,$gtabid,$field_id,$level_id){
	global $db;
	global $lang;
	global $gfield;

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}

	$level = 0;
	$pool = $gfield[$gtabid]["select_pool"][$field_id];

	if(!$pool) {return false;}

    /* --- Prüfen ob Level vorhanden ---------------------------------------- */
    $sqlquery = "SELECT COUNT(*) AS C FROM " . $tabtyp . "_W WHERE LEVEL = $del_id AND POOL = $pool";
    $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
    if (lmbdb_fetch_row($rs)) {
        $haslevel = lmbdb_result($rs, "C");
    }

    /* --- Prüfen ob verknüpft ---------------------------------------- */
    $sqlquery = "SELECT COUNT(*) AS C FROM " . $tabtyp . "_D WHERE W_ID = $del_id";
    $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
    if (lmbdb_fetch_row($rs)) {
        $hasrelations = lmbdb_result($rs, "C");
    }

    /* --- löschen ---------------------------------------- */
    if(!$haslevel AND !$hasrelations){
        $sqlquery = "DELETE FROM ".$tabtyp."_W WHERE (ID = $del_id ".(lmb_count($remove)>0 ? implode(" ",$remove) : "").") AND POOL = ".$pool;
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}

        $sqlquery = "SELECT COUNT(ID) AS ERG FROM ".$tabtyp."_W WHERE POOL = ".$pool;
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        $num = lmbdb_result($rs, "ERG");

        $sqlquery = "UPDATE ".$tabtyp."_P SET SNUM = ".parse_db_int($num)." WHERE ID = ".$pool;
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

        if($level>0){
            $sqlquery = "SELECT COUNT(ID) AS ERG FROM ".$tabtyp."_W WHERE POOL = ".$pool." AND LEVEL = ".parse_db_int($level);
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

            if(!$cnt = lmbdb_result($rs, "ERG")){
                $sqlquery = "UPDATE ".$tabtyp."_W SET HASLEVEL = ".LMB_DBDEF_FALSE." WHERE ID = ".parse_db_int($level);
                $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            }
        }

        pool_select_resort($pool,$level_id,$tabtyp);

    }else{
        lmb_alert($lang[112]);
        if($haslevel) {
            lmb_alert("Subentries to remove: " . $haslevel);
        }

        if($hasrelations) {
            lmb_alert("related records to remove: " . $hasrelations);
        }
    }

    if(!$commit){return true;}else{return false;}

}

/**
 * reset order
 * @param int $pool
 * @param int $level_id
 */
function pool_select_resort($pool,$level_id=0,$typ='LMB_SELECT')
{
    global $db;

    if (!$sort) {
        $sqlquery = "SELECT ID FROM " . $typ . "_W WHERE POOL = $pool AND LEVEL = ".parse_db_int($level_id)." ORDER BY SORT";
        $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
        if (!$rs) {
            $commit = 1;
        }
        $NEXTID = 1;
        while (lmbdb_fetch_row($rs)) {
            $sqlquery1 = "UPDATE " . $typ . "_W SET SORT = $NEXTID WHERE ID = " . lmbdb_result($rs, "ID");
            $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
            if (!$rs1) {
                $commit = 1;
            }
            if ($select_sort == lmbdb_result($rs, "ID")) {
                $sort = $NEXTID;
            }
            $NEXTID++;
        }
    }
}

/**
 * changing order of select values
 *
 * @param unknown_type $select_sort
 * @param unknown_type $select_sort_d
 * @param unknown_type $gtabid
 * @param unknown_type $field_id
 */
function pool_select_sort($select_sort,$select_sort_d,$gtabid,$field_id,$level_id=0){
	global $db;
	global $gfield;

	$select_sort = parse_db_int($select_sort);
	$select_sort_d = parse_db_int($select_sort_d);
	$gtabid = parse_db_int($gtabid);
	$field_id = parse_db_int($field_id);
	$level_id = parse_db_int($level_id);

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$typ = "LMB_ATTRIBUTE";}else{$typ = "LMB_SELECT";}
	$pool = $gfield[$gtabid]["select_pool"][$field_id];

	$sqlquery =  "SELECT SORT FROM ".$typ."_W WHERE ID = $select_sort";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sort = lmbdb_result($rs, "SORT");

	if(!$sort) {
        pool_select_resort($pool, $level_id, $typ);
    }

	/* --- nach oben  ------------------------------- */
	if($select_sort_d == 1 AND $pool) {
		if($sort > 1){
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = -1 WHERE ID = $select_sort";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = $sort WHERE SORT = ".($sort - 1)." AND POOL = $pool AND LEVEL= $level_id";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = ".($sort - 1)." WHERE ID = $select_sort";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
		}
	/* --- nach unten  ------------------------------- */
	}elseif($select_sort_d == 2 AND $pool) {
		$sqlquery =  "SELECT SORT FROM ".$typ."_W WHERE ID = $select_sort";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$sqlquery1 =  "SELECT MAX(SORT) AS MAXSORT FROM ".$typ."_W WHERE POOL = $pool AND LEVEL= $level_id";
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		if(lmbdb_result($rs, "SORT") < lmbdb_result($rs1, "MAXSORT")){
			$sort = parse_db_int(lmbdb_result($rs, "SORT"));
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = -1 WHERE ID = $select_sort";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = $sort WHERE SORT = ".($sort + 1)." AND POOL = $pool AND LEVEL= $level_id";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
			$sqlquery1 = "UPDATE ".$typ."_W SET SORT = ".($sort + 1)." WHERE ID = $select_sort";
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}
		}
	}

}

/**
 * attribute parse function
 *
 * @param string $tabtyp
 * @param int $gtabid
 * @param int $field_id
 * @param int $w_id
 * @param mixed $value
 * @return array|false
 */
function pool_parse_attribute($tabtyp, $gtabid, $field_id, $w_id, $value) {
    global $action;
    global $gfield;
    global $db;
    global $lmfieldtype;

    $update = array();

    # parse type
    $sqlquery = "SELECT DISTINCT {$tabtyp}_W.TYPE FROM {$tabtyp}_W WHERE {$tabtyp}_W.POOL = {$gfield[$gtabid]['select_pool'][$field_id]} AND {$tabtyp}_W.ID = $w_id";
    $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
    if (!$rs) {
        return false;
    }

    $data_type = lmbdb_result($rs, 'TYPE');
    $parse_type = $lmfieldtype['parse_type'][$data_type];
    $size = $lmfieldtype['size'][$data_type];

    if ($parse_type == 1) { # numeric
        $update['field'][] = 'VALUE_NUM';
        $update['value'][] = parse_db_int($value, $size);
    }elseif ($parse_type == 3) { # bool
        $update['field'][] = 'VALUE_NUM';
        $update['value'][] = parse_bool($value);
    } elseif ($parse_type == 6) { # float
        $update['field'][] = 'VALUE_NUM';
        $update['value'][] = parse_db_float($value, $size);
    } elseif ($parse_type == 2) { # text
        $update['field'][] = 'VALUE_STRING';
        $update['value'][] = "'" . parse_db_string($value, $size) . "'";
    } elseif ($parse_type == 4) { # date
        $update['field'][] = 'VALUE_DATE';
        if($value) {
            $update['value'][] = "'" . convert_date($value) . "'";
        }else{
            $update['value'][] = 'NULL';
        }
    }

    return $update;
}


/**
 * update multiple choice fields
 *
 * @param int $gtabid
 * @param int $field_id
 * @param int $ID
 * @param mixed $fs_sel List of word-ID (array or  ";" seperated tring); d = delete; e = delete; a = add; v = attribut value;
 * @return bool success
 */
function pool_select_update_old($gtabid,$field_id,$ID,$fs_sel){


	global $db;
	global $session;
	global $gtab;
	global $gfield;
	global $level_id;
	global $action;

    $old_gresult = null;
	$level_id = (isset($level_id) && !empty($level_id)) ? intval($level_id) : null;

	if ($gfield[$gtabid]['select_pool'][$field_id]) {
		# SELECT / ATTRIBUTE
		if ($gfield[$gtabid]['field_type'][$field_id] == 19) {
		    $tabtyp = 'LMB_ATTRIBUTE';
		} else {
		    $tabtyp = 'LMB_SELECT';
		}
		if (!is_array($fs_sel)) {
		    $fs_sel = explode(';', $fs_sel);
		}
		if (!$fs_sel) {
		    $fs_sel = array();
		}
		$fs_sel = array_unique($fs_sel);


		# --- Multiple Select ---
        $datatype = $gfield[$gtabid]['data_type'][$field_id];
        $fieldtype = $gfield[$gtabid]['field_type'][$field_id];
        $old_value = array();

        # OR $fieldtype == 19 OR $datatype == 32
        if($datatype == 18 OR $datatype == 31){
            $nfs_sel = array();

            # v means "update values", keep in new array
            if (in_array('v', $fs_sel)) {
                $nfs_sel[] = 'v';
            }

			# old values
			$sqlquery = "
              SELECT
                {$tabtyp}_W.ID,
                {$tabtyp}_D.ID AS PRESENT,
                {$tabtyp}_W.LEVEL AS WLEVEL
			  FROM {$tabtyp}_W 
			  LEFT JOIN {$tabtyp}_D ON ({$tabtyp}_D.W_ID = {$tabtyp}_W.ID AND {$tabtyp}_D.DAT_ID = {$ID} AND {$tabtyp}_D.TAB_ID = {$gtabid} AND {$tabtyp}_D.FIELD_ID = {$field_id})
			  WHERE {$tabtyp}_W.HIDE = ".LMB_DBDEF_FALSE." 
			    AND {$tabtyp}_W.POOL = {$gfield[$gtabid]['select_pool'][$field_id]}";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			while (lmbdb_fetch_row($rs)) {
			    $wid = lmbdb_result($rs, 'ID');
				if (lmbdb_result($rs, 'PRESENT')) {
				    $old_value[] = $wid;
				}
				if (in_array($wid, $fs_sel) AND !lmbdb_result($rs, 'PRESENT')
					AND (!is_numeric($level_id) OR $level_id === lmbdb_result($rs, 'WLEVEL'))) {
					$nfs_sel[] = 'a' . $wid;
				} elseif (!in_array($wid, $fs_sel) AND lmbdb_result($rs, 'PRESENT')
                    AND (!is_numeric($level_id) OR $level_id === lmbdb_result($rs, 'WLEVEL'))){
					$nfs_sel[] = 'd' . $wid;
				}
			}
			$fs_sel = $nfs_sel;
		}

        # --- old value ----
        if ($gtab['trigger'][$gtabid] OR $gtab['editrule'][$gtabid] OR $gfield[$gtabid]['editrule'] OR $gfield[$gtabid]['trigger'] OR $gtab['logging'][$gtabid] OR $gtab['versioning'][$gtabid] OR $gtab['lockable'][$gtabid] OR $gfield[$gtabid]['sync']) {
            $old_gresult = get_gresult($gtabid,1,null,null,null,null,$ID);
            $old_gresult[$gtabid][$field_id][0] = $old_value;
        }

        # precheck routine
        $query_dataid = array($field_id => $fs_sel);

        $query_result = null;
        $triggerResult=null;
        if(!update_data_precheck($gtabid,$ID,$query_dataid, $query_result,$old_gresult,$triggerResult)){return false;}

		#lmb_StartTransaction();
		# --- Element Schleife ---
		if($fs_sel){
            foreach($fs_sel as $key => $value){
                # --- hinzufügen ---
                if(lmb_substr($value,0,1) == 'a' and !in_array('v', $fs_sel) /* if values are changed, new entries will be added automatically */){
                    $value = lmb_substr($value,1,10);
                    if(is_numeric($value)){
                        $NEXTID = next_db_id($tabtyp."_D");
                        $sqlquery1 = "INSERT INTO {$tabtyp}_D (ID,TAB_ID,DAT_ID,FIELD_ID,W_ID,ERSTUSER) VALUES($NEXTID,$gtabid,$ID,$field_id,$value,{$session['user_id']})";
                        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
                        if(!$rs1) {$commit = 1;}

                        $sqlquery1 = "SELECT WERT FROM {$tabtyp}_W WHERE POOL = {$gfield[$gtabid]['select_pool'][$field_id]} AND ID = $value";
                        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
                        if(!$rs1) {$commit = 1;}

                        $history_val[] = '> ' . lmbdb_result($rs1, 'WERT');
                    }

                # löschen
                }elseif (lmb_substr($value,0,1) == 'd' OR lmb_substr($value,0,1) == 'e'){

                    // e = delete with select_d ID
                    // d = delete with select_w ID
                    $fname = 'W_ID';
                    if(lmb_substr($value,0,1) == 'e'){
                        $fname = 'ID';
                    }
                    $value = lmb_substr($value,1,10);

                    if(is_numeric($value)){
                        $sqlquery1 = "DELETE FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID AND $fname = $value";
                        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
                        if(!$rs1) {$commit = 1;}

                        $sqlquery1 = "SELECT WERT FROM {$tabtyp}_W WHERE POOL = {$gfield[$gtabid]['select_pool'][$field_id]} AND ID = $value";
                        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
                        if(!$rs1) {$commit = 1;}

                        $history_val[] = '< ' . lmbdb_result($rs1, 'WERT');
                    }

                # Attribut-Inhalt
                }elseif (lmb_substr($value,0,1) == 'v' AND $gfield[$gtabid]['field_type'][$field_id] == 19){

                    static $pool_setting;
                    if(!$pool_setting) {
                        // Poolsettings
                        $pool_multimode = $GLOBALS['gselectpool'][$tabtyp]['multimode'][$gfield[$gtabid]["select_pool"][$field_id]];
                        #$sqlquery = "SELECT {$tabtyp}_P.MULTIMODE FROM {$tabtyp}_P WHERE ID = " . $gfield[$gtabid]["select_pool"][$field_id];
                        #$rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                        #$pool_multimode = lmbdb_result($rs, "MULTIMODE");
                        $pool_setting = 1;
                    }

                    # Attribut-Wert
                    $fname = $gfield[$gtabid]['form_name'][$field_id].'_'.$ID.'_att';
                    global ${$fname};
                    if(!isset(${$fname})){continue;}
                    $attr = ${$fname};

                    foreach ($attr as $attr_wid => $attr_w) {
                        foreach ($attr_w as $attr_did => $attr_value){

                            # multiple mode
                            if($pool_multimode){$mqu = "AND ID = $attr_did";}

                            $que = array();
                            if ($update = pool_parse_attribute($tabtyp, $gtabid, $field_id, $attr_wid, $attr_value)) {
                                foreach ($update['field'] as $key1 => $value1) {
                                    $que[] = $update['field'][$key1] . ' = ' . $update['value'][$key1];
                                }
                                $update = implode(',', $que);

                                $sqlquery1 = "SELECT ID FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND W_ID = $attr_wid AND DAT_ID = $ID $mqu";
                                $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
                                if (!$rs1) {
                                    $commit = 1;
                                }
                                # change
                                if (lmbdb_result($rs1, 'ID')) {
                                    $sqlquery2 = "UPDATE {$tabtyp}_D SET $update WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND W_ID = $attr_wid AND DAT_ID = $ID $mqu";
                                    $rs2 = lmbdb_exec($db, $sqlquery2) or errorhandle(lmbdb_errormsg($db), $sqlquery2, $action, __FILE__, __LINE__);
                                    if (!$rs2) {
                                        $commit = 1;
                                    }
                                # add
                                } else {
                                    /* --- Next ID ---------------------------------------- */

                                    # Attribut-Wert
                                    $insfield = $insvalue = '';
                                    if ($gfield[$gtabid]['field_type'][$field_id] == 19) {
                                        if ($update = pool_parse_attribute($tabtyp, $gtabid, $field_id, $attr_wid, $attr_value)) {
                                            $insfield = ',' . implode(',', $update['field']);
                                            $insvalue = ',' . implode(',', $update['value']);
                                        }
                                    }
                                    $NEXTID = next_db_id("{$tabtyp}_D");
                                    $sqlquery2 = "INSERT INTO {$tabtyp}_D (ID,TAB_ID,DAT_ID,FIELD_ID,W_ID,ERSTUSER $insfield) VALUES($NEXTID,$gtabid,$ID,$field_id,$attr_wid,{$session['user_id']} $insvalue)";
                                      $rs2 = lmbdb_exec($db, $sqlquery2) or errorhandle(lmbdb_errormsg($db), $sqlquery2, $action, __FILE__, __LINE__);
                                    if (!$rs2) {
                                        $commit = 1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

		#lmb_EndTransaction(!$commit);
        if(!$commit){
            if ($history_val) {
                $sqlquery1 = "UPDATE {$gtab['table'][$gtabid]} SET {$gfield[$gtabid]['field_name'][$field_id]} = (SELECT COUNT(*) AS RCOUNT FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID) WHERE {$gtab['keyfield'][$gtabid]} = $ID";
                $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $GLOBALS['action'], __FILE__, __LINE__);
            }
            // postcheck routine
            $query_dataid[$field_id] = $history_val;
            if(!update_data_postcheck($gtabid,$ID,$query_dataid,$old_gresult,$triggerResult)){return false;}
        }

	}

	if($commit){return false;}

	return true;
}






/**
 * update multiple choice fields
 *
 * @param int $gtabid
 * @param int $field_id
 * @param int $ID
 * @param mixed $fs_sel List of word-ID (array or  ";" seperated tring); d = delete; e = delete; a = add; v = attribut value;
 * @return bool success
 */
function pool_select_prepare($gtabid,$field_id,$ID,$fs_sel){

	global $db;
	global $session;
	global $gtab;
	global $gfield;
	global $level_id;
	global $action;

    $old_gresult = null;
	$level_id = (isset($level_id) && !empty($level_id)) ? intval($level_id) : null;

	if ($gfield[$gtabid]['select_pool'][$field_id]) {
		# SELECT / ATTRIBUTE
		if ($gfield[$gtabid]['field_type'][$field_id] == 19) {
		    $tabtyp = 'LMB_ATTRIBUTE';
		} else {
		    $tabtyp = 'LMB_SELECT';
		}
		if (!is_array($fs_sel)) {
		    $fs_sel = explode(';', $fs_sel);
		}
		if (!$fs_sel) {
		    $fs_sel = array();
		}
		$fs_sel = array_unique($fs_sel);

		# --- Multiple Select ---
        $datatype = $gfield[$gtabid]['data_type'][$field_id];
        $old_value = array();

        // multiselect without attribute
        if($datatype == 18 OR $datatype == 31){
            $nfs_sel = array();

            # v means "update values", keep in new array
            if (in_array('v', $fs_sel)) {
                $nfs_sel[] = 'v';
            }

			# old values
			$sqlquery = "
              SELECT
                {$tabtyp}_W.ID,
                {$tabtyp}_D.ID AS PRESENT,
                {$tabtyp}_W.LEVEL AS WLEVEL
			  FROM {$tabtyp}_W 
			  LEFT JOIN {$tabtyp}_D ON ({$tabtyp}_D.W_ID = {$tabtyp}_W.ID AND {$tabtyp}_D.DAT_ID = {$ID} AND {$tabtyp}_D.TAB_ID = {$gtabid} AND {$tabtyp}_D.FIELD_ID = {$field_id})
			  WHERE {$tabtyp}_W.HIDE = ".LMB_DBDEF_FALSE." 
			    AND {$tabtyp}_W.POOL = {$gfield[$gtabid]['select_pool'][$field_id]}";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			while (lmbdb_fetch_row($rs)) {
			    $wid = lmbdb_result($rs, 'ID');
				if (lmbdb_result($rs, 'PRESENT')) {
				    $old_value[] = $wid;
				}
				if (in_array($wid, $fs_sel) AND !lmbdb_result($rs, 'PRESENT')
					AND (!is_numeric($level_id) OR $level_id === lmbdb_result($rs, 'WLEVEL'))) {
					$nfs_sel[] = 'a' . $wid;
				} elseif (!in_array($wid, $fs_sel) AND lmbdb_result($rs, 'PRESENT')
                    AND (!is_numeric($level_id) OR $level_id === lmbdb_result($rs, 'WLEVEL'))){
					$nfs_sel[] = 'd' . $wid;
				}
			}
			$fs_sel = $nfs_sel;
		}

		# --- Element Schleife ---
		if($fs_sel){
            foreach($fs_sel as $key => $value){
                $actflag = lmb_substr($value,0,1);
                $selectID = lmb_substr($value,1,10);

                // add value
                if($actflag == 'a' and !in_array('v', $fs_sel) AND is_numeric($selectID)){ /* if values are changed, new entries will be added automatically */
                    // add value
                    $prepare_value[] = array('action'=>'a','wid'=>$selectID);

                // drop value
                }elseif ($actflag == 'd' OR $actflag == 'e' AND is_numeric($selectID)){

                    if($actflag== 'e'){
                        $prepare_value[] = array('action'=>'d','id'=>$selectID);
                    }else{
                        $prepare_value[] = array('action'=>'d','wid'=>$selectID);
                    }

                # Attribut
                }elseif ($actflag == 'v' AND $gfield[$gtabid]['field_type'][$field_id] == 19){

                    # Attribut-Wert
                    $fname = $gfield[$gtabid]['form_name'][$field_id].'_'.$ID.'_att';
                    global ${$fname};
                    if(!isset(${$fname})){continue;}
                    $attr = ${$fname};

                    foreach ($attr as $attr_wid => $attr_w) {
                        foreach ($attr_w as $attr_did => $attr_value){
                            $que_mode = '';

                            // multiple mode
                            if($attr_wid) {
                                $que_mode = "AND W_ID = $attr_wid";
                            }
                            if($multimode AND $attr_did){
                               $que_mode .= " AND ID = $attr_did";
                            }

                            // check if already exists
                            $sqlquery1 = "SELECT ID FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID $que_mode";
                            $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
                            if (!$rs1) {
                                $commit = 1;
                            }

                            # change
                            if (lmbdb_result($rs1, 'ID')) {
                                $prepare_value[] = array('action'=>'u','wid'=>$attr_wid,'id'=>$attr_did,'value'=>$attr_value);
                            # add
                            } else {
                                $prepare_value[] = array('action'=>'a','wid'=>$attr_wid,'value'=>$attr_value);
                            }
                        }
                    }
                }
            }
        }

        // execute changes
        if(!$commit AND pool_select_update($gtabid,$field_id,$ID,$prepare_value)){
            return true;
        }

	}

    if($commit){return false;}
	return true;
}






function pool_select_update($gtabid,$field_id,$ID,$change_array){
	global $db;
	global $session;
	global $gtab;
	global $gfield;
	global $action;

    // SELECT OR ATTRIBUTE
    if ($gfield[$gtabid]['field_type'][$field_id] == 19) {
        $tabtyp = 'LMB_ATTRIBUTE';
    } else {
        $tabtyp = 'LMB_SELECT';
    }

    // Poolsettings / multiple mode
    #if ($gfield[$gtabid]['field_type'][$field_id] == 19) {
        $multimode = $GLOBALS['gselectpool'][$tabtyp]['multimode'][$gfield[$gtabid]["select_pool"][$field_id]];
        #$sqlquery = "SELECT {$tabtyp}_P.MULTIMODE,{$tabtyp}_P.MULTIMODE FROM {$tabtyp}_P WHERE ID = " . $gfield[$gtabid]["select_pool"][$field_id];
        #$rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
        #$multimode = lmbdb_result($rs, "MULTIMODE");
    #}

    //  get old value if needed
    if ($gtab['trigger'][$gtabid] OR $gtab['editrule'][$gtabid] OR $gfield[$gtabid]['editrule'] OR $gfield[$gtabid]['trigger'] OR $gtab['logging'][$gtabid] OR $gtab['versioning'][$gtabid] OR $gtab['lockable'][$gtabid] OR $gfield[$gtabid]['sync']) {
        $old_gresult = get_gresult($gtabid,1,null,null,null,null,$ID);
        $old_gresult[$gtabid][$field_id][0] = $old_value;
    }

    // precheck routine
    $query_dataid = array($field_id => $fs_sel);
    $query_result=null;
    $triggerResult=null;
    if(!update_data_precheck($gtabid,$ID,$query_dataid,$query_result,$old_gresult,$triggerResult)){return false;}

    foreach($change_array as $key => $change_part){

        $actflag = $change_part['action'];
        $selectWID = $change_part['wid'];
        $selectID = $change_part['id'];
        $selectvalue = $change_part['value'];

        $que_mode = '';
        $que_insfield = '';
        $que_insvalue = '';
        $que_update = '';
        $history_act = '';

        // get W_ID if not set
        if(!$selectWID AND $selectID){
            $sqlquery1 = "SELECT W_ID FROM {$tabtyp}_D WHERE ID = $selectID";
            $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
            if(!$rs1) {$commit = 1;}
            $selectWID = lmbdb_result($rs1, 'W_ID');
        }

        // multiple mode
        if($selectWID) {
            $que_mode = " AND W_ID = $selectWID";
        }
        if($multimode AND $selectID){
           $que_mode .= " AND ID = $selectID";
        }

        if(!$selectWID){return false;}

        // get history value description
        $sqlquery1 = "SELECT WERT FROM {$tabtyp}_W WHERE POOL = {$gfield[$gtabid]['select_pool'][$field_id]} AND ID = $selectWID";
        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
        if(!$rs1) {$commit = 1;}
        $history_desc = lmbdb_result($rs1, 'WERT');

        # get attribute field parsing
        if ($gfield[$gtabid]['field_type'][$field_id] == 19 AND $que = pool_parse_attribute($tabtyp, $gtabid, $field_id, $selectWID, $selectvalue)) {
            $que_update = $que['field'][0] . ' = ' . $que['value'][0];
            $que_insfield = ',' . $que['field'][0];
            $que_insvalue = ',' . $que['value'][0];
        }

        // add value
        if($actflag == 'a') {
            $NEXTID = next_db_id($tabtyp . "_D");
            $sqlquery1 = "INSERT INTO {$tabtyp}_D (ID,TAB_ID,DAT_ID,FIELD_ID,W_ID,ERSTUSER $que_insfield) VALUES($NEXTID,$gtabid,$ID,$field_id,$selectWID,{$session['user_id']} $que_insvalue)";
            $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
            if (!$rs1) {
                $commit = 1;
            }
            $history_act = '>';
        }
        // drop value
        elseif($actflag == 'd' OR $actflag == 'e') {
            // e = delete with select_d ID
            // d = delete with select_w ID
            if($actflag == 'e'){
                 $que_mode = " AND ID = $selectWID";
            }
            $sqlquery1 = "DELETE FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID $que_mode";
            $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
            if (!$rs1) {
                $commit = 1;
            }
            $history_act = '<';
        }
        // update value
        elseif($actflag == 'u') {
            $sqlquery1 = "UPDATE {$tabtyp}_D SET $que_update WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID $que_mode";
            $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
            if (!$rs1) {
                $commit = 1;
            }
            $history_act = '>';
        }

        // history array
        if($history_act) {
            $history_value[] = $history_act . ' ' . $history_desc . ' ' . $selectvalue;
        }
    }

    if(!$commit){
        // set cashe count
        if ($history_value) {
            $sqlquery1 = "UPDATE {$gtab['table'][$gtabid]} SET {$gfield[$gtabid]['field_name'][$field_id]} = (SELECT COUNT(*) AS RCOUNT FROM {$tabtyp}_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $ID) WHERE {$gtab['keyfield'][$gtabid]} = $ID";
            $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $GLOBALS['action'], __FILE__, __LINE__);
        }
        // postcheck routine
        $query_dataid[$field_id] = $history_value;
        if(!update_data_postcheck($gtabid,$ID,$query_dataid,$old_gresult,$triggerResult)){return false;}

        return true;
    }

    return false;
}


?>
