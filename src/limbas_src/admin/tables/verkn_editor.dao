<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */




if($relation_extension){
	$prepare_string = "UPDATE LMB_CONF_FIELDS SET RELEXT = ? WHERE FIELD_ID = $fieldid AND TAB_ID = $tabid";
	if(!lmb_PrepareSQL($prepare_string,array($relation_value),__FILE__,__LINE__)){$commit = 1;}
}

if($relation_parameter){
	$prepare_string = "UPDATE LMB_CONF_FIELDS SET RELPARAMS = ? WHERE FIELD_ID = $fieldid AND TAB_ID = $tabid";
	if(!lmb_PrepareSQL($prepare_string,array($relparams_value),__FILE__,__LINE__)){$commit = 1;}
}

if($params AND $relation_parameter){
    setRelationParameter($tabid,$fieldid,$params);
}

if($fieldid AND $tabid){
    $rfield = lmb_get_relation_setting($tabid,$fieldid);
}

# --- get forein keys ----------------------------------------------
if($rfield['verkntabid']){
	$sqlquery =  "SELECT TABELLE,BESCHREIBUNG FROM LMB_CONF_TABLES WHERE TAB_ID = ".$rfield['verkntabid'];
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$rfield['verkntabname'] = lmbdb_result($rs, "TABELLE");

	$fkys = lmb_getForeignKeys();

	if($fkys["keyname"]){
	foreach ($fkys["keyname"] as $key => $value){
	    // TAB.ID -> ID
	    if($fkys["tablename"][$key] == dbf_4($rfield['md5tab']) AND $fkys["columnname"][$key] == dbf_4("ID") AND $fkys["reftablename"][$key] == dbf_4($rfield['tabname']) AND $fkys["refcolumnname"][$key] == dbf_4("ID")){
			$rfield['f1'] = $fkys["keyname"][$key];
		// VERKN_ID -> TAB-ID
	    }elseif($fkys["tablename"][$key] == dbf_4($rfield['md5tab']) AND $fkys["columnname"][$key] == dbf_4("VERKN_ID") AND $fkys["reftablename"][$key] == dbf_4($rfield['verkntabname']) AND $fkys["refcolumnname"][$key] == dbf_4("ID")){
			$rfield['f2']  = $fkys["keyname"][$key];
		// direct 1:n
		}elseif($fkys["tablename"][$key] == dbf_4($rfield['verkntabname']) AND $fkys["columnname"][$key] == dbf_4($rfield['md5tab']) AND $fkys["reftablename"][$key] == dbf_4($rfield['tabname']) AND $fkys["refcolumnname"][$key] == dbf_4("ID")){
			$rfield['f3']  = $fkys["keyname"][$key];
		}
	}}
}

/* --- Referentielle Integrität ändern ---------------------------------------------*/
if($change_refint AND $new_refint_rule AND $rfield['veknfieldid']  AND !$recursrelation){
	lmb_set_relation_foreignkey($fieldid,$tabid,$new_refint,$rfield);
}


/* --- uniqueralation ---------------------------------------------*/
if($change_uniqueralation AND $rfield['veknfieldid'] AND !$recursrelation){
    lmb_set_uniquefield($tabid,$fieldid,$new_isunique,$rfield);
    lmb_set_multiralation($tabid,$fieldid,0,$rfield);
}

/* --- multiralation ---------------------------------------------*/
if($change_multiralation AND $rfield['veknfieldid'] AND !$recursrelation){
    lmb_set_multiralation($tabid,$fieldid,$new_multiralation,$rfield);
    lmb_set_uniquefield($tabid,$fieldid,0,$rfield);
}

/* --- Relation Tree --------------------------------------------- */
if ($fieldid and $tabid and $relationtree) {
    createRecRelation($tabid, $fieldid, $relationtree, $rfield);
    $rfield['verkntabletype'] = 3;
}

/* --- Verknüpfungs-Tabelle eintragen --------------------------------------------- */
if($new_verkntabid) {
    lmb_set_relation_table($tabid,$fieldid,$new_verkntabid,$rfield);
}

# --- Verknüpfungs-Feld eintragen -----------------
if ($set_verknfieldid AND $new_verknfieldid) {
    lmb_set_relation_field($fieldid,$tabid,$new_verknfieldid,$rfield);
}

# --- Verknüpfungs-Parameter eintragen -----------------
if($vknsave){
    if($rfield['veknfieldid']) {
        lmb_set_relation_params($fieldid, $tabid, $new_verknsearchid, $new_verknfindid, $new_verknviewid, $verknsort, $verknsortf, $viewidCut, $findidCut, $rfield);
    }else{
        lmb_alert($lang[2331] . ' "' . $lang[1825] . '" ' . $lang[3158]);
    }
}

/* --- Verknüpfung aus ID Feldern neu füllen --------------------------------------------- */
if($verknrefresh AND $rfield['verkntabid']){
    set_time_limit(10000);
    lmb_rebuild_relation($rfield, $v_field1, $v_field2);
}

# --- Verknüpfungs-Parameterisierung -----------------
if($change_vparams AND $fieldid AND $tabid AND $rfield['veknfieldid'] AND !$recursrelation){
	$verknparams = createRelationParams($tabid,$fieldid, $new_vparams,$rfield);
}

if($new_backview_verkn){
    $new_backview_verkn = explode('_',$new_backview_verkn);
    if($new_backview_verkn[0] AND $new_backview_verkn[1]) {
        lmb_set_relation_table($tabid, $fieldid, $new_backview_verkn[0],$rfield,$new_backview_verkn[1]);
    }
}




?>
