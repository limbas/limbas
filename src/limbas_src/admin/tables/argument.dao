<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */

set_time_limit(1800); #30min

require_once(COREPATH . 'gtab/gtab.lib');

# include extensions
if($GLOBALS["gLmbExt"]["ext_gtab.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_gtab.inc"] as $key => $extfile){
		require_once($extfile);
	}
}
if($GLOBALS["gLmbExt"]["ext_gtab_change.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_gtab_change.inc"] as $key => $extfile){
		require_once($extfile);
	}
}
if($GLOBALS["gLmbExt"]["ext_gtab_erg_dao.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_gtab_erg_dao.inc"] as $key => $extfile){
		require_once($extfile);
	}
}

if($GLOBALS["gLmbExt"]["ext_globalFilter.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_globalFilter.inc"] as $key => $extfile){
		require_once($extfile);
	}
}

/* -------------------------- Argument --------------------------------- */
function arg_refresh($gtabid,$fieldid) {
	global $session;
	global $db;
	global $gfield;
	global $gtab;

    $filter["anzahl"][$gtabid] = 'all';
    $filter["nolimit"][$gtabid] = 1;
    $gresult = get_gresult($gtabid,1,$filter);

    foreach($gresult[$gtabid]['id'] as $bzm => $ID) {
        $arg_result = ftyp_13($ID, $gresult, $fieldid, $gtabid, null, null, null, null, $bzm);
    }

    return true;
}


function lmb_editFieldTypeArgumentDyns($par) {
    global $db;
    global $gfield;
    global $lang;

    $tabid = $par['tabid'];
    $fieldid = $par['fieldid'];
    $tabgroup = $par['tabgroup'];
    
    // change Argument
    if(array_key_exists('argument',$par)){
        $argument = trim(parse_db_string($par['argument']));
        $sqlquery = 'UPDATE LMB_CONF_FIELDS".$tab." SET ARGUMENT = \'' . $argument . '\' WHERE FIELD_ID = ' . parse_db_int($fieldid). ' AND TAB_GROUP = ' . parse_db_int($tabgroup). ' AND TAB_ID = ' . parse_db_int($tabid);
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    }

    
// get Argument
    $sqlquery = 'SELECT ARGUMENT_TYP,ARGUMENT,ID FROM LMB_CONF_FIELDS WHERE FIELD_ID = ' . parse_db_int($fieldid). ' AND TAB_GROUP =  ' . parse_db_int($tabgroup). ' AND TAB_ID =  ' . parse_db_int($tabid);
    
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(lmbdb_fetch_row($rs)) {
        $result_argument["argument"] = lmbdb_result($rs, "ARGUMENT");
        $result_argument["argument_typ"] = lmbdb_result($rs, "ARGUMENT_TYP");
        $result_argument["id"] = lmbdb_result($rs, "ID");
    }
    
    $arg_type = 'sql';
    if ($result_argument["argument_typ"] == 15) {
        $arg_type = 'php';
    }
    
    
    $output = [];
    
    if ($arg_type == 'php') {
        $output['title'] = $lang[1375];
        $output['fields'] = [];
        
        if($gfield[$tabid]["field_id"]){
            foreach($gfield[$tabid]["field_id"] as $key => $value){
                $output['fields'][$gfield[$tabid]['field_id'][$key]] = '('.$gfield[$tabid]['field_id'][$key].') '.$gfield[$tabid]['field_name'][$key];
            }
        }

        $output['fields'] = (object)$output['fields'];
        
        $output['example'] = 'eg ( return "hello world #*1#"; )';
        
        
    } else {
        $output['title'] = $lang[2256];
        $output['example'] = 'eg ( CUSTOMER.FIRSTNAME '.LMB_DBFUNC_CONCAT.' CUSTOMER.LASTNAME )';
    }
    
    $output['argument'] = $result_argument['argument'];

    header('Content-Type: application/json');
    echo json_encode($output);
}

function lmb_refreshFieldTypeArgumentDyns($par) {
    global $db;
    global $gfield;

    $gtabid = parse_db_int($par['tabid']);
    $fieldid = parse_db_int($par['fieldid']);

    $sqlquery = "SELECT ARGUMENT_TYP,ARGUMENT,ID FROM LMB_CONF_FIELDS WHERE FIELD_ID = $fieldid AND TAB_ID =  $gtabid";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(lmbdb_fetch_row($rs)) {
        if(lmbdb_result($rs,"ARGUMENT")){$GLOBALS['gfield'][$gtabid]["argument"][$fieldid] = trim(lmbdb_result($rs,"ARGUMENT"));}
        if(lmbdb_result($rs,"ARGUMENT_TYP")){$GLOBALS['gfield'][$gtabid]["argument_typ"][$fieldid] = lmbdb_result($rs,"ARGUMENT_TYP");}
        $GLOBALS['gfield'][$gtabid]["argument_edit"][$fieldid] = false;
    }

    header('Content-Type: application/json');
    $success = false;
    if($GLOBALS['gfield'][$gtabid]["argument"][$fieldid]){
        if(arg_refresh($gtabid,$fieldid)){
            $success = true;
        }
    }
    echo json_encode(['success'=>$success]);
}



?>

