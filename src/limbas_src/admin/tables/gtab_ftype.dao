<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */





##DATA_TYPE NOT IN (18,31,32,43,48,41,47,13,38,46)


$ext_fk = getTypeExensions();

/* --- Transaktion START ------------------------------------------------ */
lmb_StartTransaction(1);

/* --- Tabellen-Array --------------------------------- */
unset($table_gtab);
unset($conf_gtab);
unset($beziehung_gtab);
unset($ebene_gtab);
unset($beschreibung_gtab);
if(!$tab_group){$tab_group = $gtab["tab_group"][$atid];}
if($tab_group){$gb = "WHERE TAB_GROUP = $tab_group";}
$sqlquery = "SELECT * FROM LMB_CONF_TABLES $gb ORDER BY ID";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(!$rs) {$commit = 1;}
while(lmbdb_fetch_row($rs)) {
	$table_id = lmbdb_result($rs,"TAB_ID");
	$table_gtab[$table_id] = lmb_strtolower(lmbdb_result($rs,"TABELLE"));
	$beschreibung_gtab[$table_id] = $lang[lmbdb_result($rs,"BESCHREIBUNG")];
	$KEYID_gtab[$table_id] = lmbdb_result($rs,"TAB_ID");
	$tabgroup_gtab[$table_id] = lmbdb_result($rs,"TAB_GROUP");
	$tab_versioning[$table_id] = lmbdb_result($rs,"VERSIONING");
	$table_typ[$table_id] = lmbdb_result($rs,"TYP");
	$table_validity[$table_id] = lmbdb_result($rs,"VALIDITY");
	$table_multitenant[$table_id] = lmbdb_result($rs,"MULTITENANT");
	$table_datasync[$table_id] = lmbdb_result($rs,"DATASYNC");
	${"tabid_".lmbdb_result($rs,"TABELLE")} = lmbdb_result($rs,"TAB_ID");
}


if(!$new_gtab){
	$new_gtab = $table_gtab[$atid];
}

if(!$column AND $ftid AND $atid){
	$field_ = get_fieldname($atid,$ftid);
	$column = $field_[0];
}

// --- Positionsänderung -------------------------------
if($move_to AND $fieldid) {
	if(preg_match("/[1-9]{1,}/",$move_to) or $move_to === 'last'){
	    if ($move_to === 'last') {
            $sqlquery =  "SELECT MAX(SORT) AS SORT FROM LMB_CONF_FIELDS WHERE TAB_GROUP = $tab_group AND TAB_ID = $atid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            $move_to = lmbdb_result($rs,"SORT") + 1;
        } else {
            $sqlquery =  "SELECT SORT FROM LMB_CONF_FIELDS WHERE FIELD_ID = $move_to AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            $move_to = lmbdb_result($rs,"SORT");

            $sqlquery =  "UPDATE LMB_CONF_FIELDS SET SORT = (SORT + 1) WHERE SORT >= $move_to AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        }

		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SORT = $move_to WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);


		$sqlquery =  "SELECT SORT,FIELD_ID FROM LMB_CONF_FIELDS WHERE TAB_GROUP = $tab_group AND TAB_ID = $atid ORDER BY SORT";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$bzm = 1;
		while(lmbdb_fetch_row($rs)) {
			$sqlquery2 =  "UPDATE LMB_CONF_FIELDS SET SORT = $bzm WHERE FIELD_ID = ".lmbdb_result($rs,"FIELD_ID")." AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
			$rs2 = lmbdb_exec($db,$sqlquery2) or errorhandle(lmbdb_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
			$bzm++;
		}

	}
}



/* --- Feld löschen --------------------------------------------- */
if($del){
	$GLOBALS["filestruct"]['admin'] = 1;
	if(!delete_field_table($atid,$column_id,$drop_physical)){
	 	$commit = 1;
	}
}



/* --- Defaultwert setzen --------------------------------------------- */
if($def){

	$sqlquery =  "SELECT LMB_CONF_FIELDS.DATA_TYPE
	FROM LMB_CONF_FIELDS
	WHERE LMB_CONF_FIELDS.FIELD_ID = $fieldid AND LMB_CONF_FIELDS.TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    $parsetype = $lmfieldtype["db_datatype"][lmbdb_result($rs,"DATA_TYPE")];

    $def = lmb_get_db_defaultValue($def,$parsetype);

	if($sqlquery = dbq_9(array($DBA["DBSCHEMA"],$new_gtab,$column,$def))){
		$rs1 = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}
	}

	if(!$commit){
		if(lmb_strtoupper($def) == "'NULL'"){$def = "";}
		$def = str_replace('NULL','',$def);
        $def = parse_db_string($def);
		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET DEFAULTVALUE = '".trim($def,"'")."' WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
		$rs2 = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs2) {$commit = 1;}
	}


}



/* --- Feldname ändern --------------------------------------------- */
if($fieldname){
	lmb_renameField($atid,$fieldid,$fieldname);
}

/* --- Spelling Feld ändern --------------------------------------------- */
if($spelling){
	$sqlquery =  "SELECT TAB_ID,FIELD_NAME,SPELLING FROM LMB_CONF_FIELDS WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$spelling_id = lmbdb_result($rs,"SPELLING");
	$filedesc = $gtab["table"][lmbdb_result($rs,"TAB_ID")].":".lmbdb_result($rs,"FIELD_NAME");

	lang_change(null,$spelling_id,$spelling,$session["language"],"_DEPEND",4,$filedesc);

	$sqlquery =  "UPDATE LDMS_STRUCTURE SET NAME = '".str_replace("'","''",lmb_substr($spelling,0,50))."' WHERE FIELD_ID = $fieldid AND TABGROUP_ID = $tab_group AND TAB_ID = $atid AND FIX = ".LMB_DBDEF_TRUE." AND TYP = 3";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Beschreibung Feld ändern --------------------------------------------- */
if($desc){
	$sqlquery =  "SELECT TAB_ID,FIELD_NAME,BESCHREIBUNG FROM LMB_CONF_FIELDS WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$beschreibung_id = lmbdb_result($rs,"BESCHREIBUNG");
	$filedesc = $gtab["table"][lmbdb_result($rs,"TAB_ID")].":".lmbdb_result($rs,"FIELD_NAME");

	lang_change(null,$beschreibung_id,$desc,$session["language"],"_DEPEND",4,$filedesc);
}

/* --- Keyfield Feld ändern --------------------------------------------- */
if($keyfield){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET FIELDKEY = ".LMB_DBDEF_FALSE." WHERE TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET FIELDKEY = ".LMB_DBDEF_TRUE." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid AND TAB_GROUP = $tab_group";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Bezeichner Feld ändern --------------------------------------------- */
if($mainfield){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET MAINFIELD = ".LMB_DBDEF_FALSE." WHERE TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET MAINFIELD = ".LMB_DBDEF_TRUE." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- UNIQUE ändern --------------------------------------------- */
if($uniquefield){
    lmb_set_uniquefield($atid,$fieldid,$uniquefield,$rfield);
}


/* --- INDEX ändern --------------------------------------------- */
if($fieldindex){
	$sqlquery = dbq_2(array($DBA["DBSCHEMA"],$new_gtab,null,0,$column));
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	# drop index
	while(lmbdb_fetch_row($rs)){
		$sqlquery1 = dbq_5(array($DBA["DBSCHEMA"],lmbdb_result($rs, "INDEXNAME"),lmbdb_result($rs, "TABLENAME")));
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;$findex = LMB_DBDEF_TRUE;}else{$findex = LMB_DBDEF_FALSE;}
		$dropindex = 1;
	}

	# add index
	if(!$dropindex){
        $indname = lmb_getConstraintName('LMB_IND',$new_gtab,$column);
		$sqlquery1 = dbq_4(array($DBA["DBSCHEMA"],$indname,$new_gtab,$column));
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;$findex = LMB_DBDEF_FALSE;}else{$findex = LMB_DBDEF_TRUE;}
	}

	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET INDEXED = ".$findex." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- view-rule ändern --------------------------------------------- */
if($view_rule){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET VIEWRULE = '".parse_db_string(trim($view_rule),250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- view-rule ändern --------------------------------------------- */
if($edit_rule){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET EDITRULE = '".parse_db_string(trim($edit_rule),250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- ARTLEISTE ändern ---------------------------------------------*/
if($artleiste){
	if($artleiste == "artleiste_CHECKED" OR $artleiste == "false"){$artleiste = LMB_DBDEF_FALSE;}else{$artleiste = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET ARTLEISTE = $artleiste WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- quicksearch ändern ---------------------------------------------*/
if($quicksearch){
	if($quicksearch == "quicksearch_CHECKED" OR $quicksearch == "false"){$quicksearch = LMB_DBDEF_FALSE;}else{$quicksearch = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET QUICKSEARCH = $quicksearch WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- fullsearch ändern ---------------------------------------------*/
if($fullsearch){
    if($fullsearch == "fullsearch_CHECKED" OR $fullsearch == "false"){$fullsearch = LMB_DBDEF_FALSE;}else{$fullsearch = LMB_DBDEF_TRUE;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET FULLSEARCH = $fullsearch WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}
}

/* --- Grupierbar ändern ---------------------------------------------*/
if($groupable){
	if($groupable == "groupable_CHECKED" OR $groupable == "false"){$groupable = LMB_DBDEF_FALSE;}else{$groupable = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET GROUPABLE = $groupable WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Stapeländerung ---------------------------------------------*/
if($collreplace){
	if($collreplace == "collreplace_CHECKED" OR $collreplace == "false"){$collreplace = LMB_DBDEF_FALSE;}else{$collreplace = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET COLLREPLACE = $collreplace WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- CHECKSUM ---------------------------------------------*/
if($checksum){
    // set CONF_FIELDS
    if($checksum == "checksum_CHECKED" OR $checksum == "false"){$checksum = LMB_DBDEF_FALSE;}else{$checksum = LMB_DBDEF_TRUE;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET CHECKSUM = $checksum WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Multilanguage ---------------------------------------------*/
if($multilang){
    // set CONF_FIELDS
    if($multilang == "false"){$multilang = LMB_DBDEF_FALSE;$m = 0;}else{$multilang = LMB_DBDEF_TRUE;$m = 1;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET MULTILANG = $multilang WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}elseif($table_typ[$atid] != 5){
        lmb_set_multi_language($atid,$fieldid,$m);
    }
}

/* --- searchversion ---------------------------------------------*/
if($searchversion){
    // set CONF_FIELDS
    if($searchversion == "false"){$searchversion = LMB_DBDEF_FALSE;}else{$searchversion = LMB_DBDEF_TRUE;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET SEARCHVERSION = $searchversion WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Nummer-Format ändern --------------------------------------------- */
if($nformat){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET NFORMAT = '".parse_db_string(trim($nformat),30)."' WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Potenzschwelle ändern --------------------------------------------- */
if($potency){
	$potency = parse_db_int(trim($potency),10);
	if(!$potency){$potency = "NULL";}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET POTENCY = $potency WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Währung ändern --------------------------------------------- */
if($ncurrency){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET CURRENCY = '".parse_db_string(trim($ncurrency))."' WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Select Cut ändern --------------------------------------------- */
if($select_cut){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SELECT_CUT = '".parse_db_string(trim($select_cut),8)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- dynamic search ---------------------------------------------------
if($dynsearch AND $fieldid){
	if($dynsearch == "dynsearch_CHECKED" OR $dynsearch == "false"){$dynsearch = LMB_DBDEF_FALSE;}else{$dynsearch = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET DYNSEARCH = $dynsearch WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- dynamic save ---------------------------------------------------
if($ajaxsave AND $fieldid){
	if($ajaxsave == "ajaxsave_CHECKED" OR $ajaxsave == "false"){$ajaxsave = LMB_DBDEF_FALSE;}else{$ajaxsave = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET AJAXPOST = $ajaxsave WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit eval ---------------------------------------------------
if($inherit_eval){
	if($inherit_eval == "false"){$inherit_eval = LMB_DBDEF_FALSE;}else{$inherit_eval = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_EVAL = $inherit_eval WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit search ---------------------------------------------------
if($inherit_search){
	if($inherit_search == "false"){$inherit_search = LMB_DBDEF_FALSE;}else{$inherit_search = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_SEARCH = $inherit_search WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit group ---------------------------------------------------
if($inherit_group){
	if($inherit_group == 'null'){$inherit_group = "NULL";}else{$inherit_group = parse_db_int($inherit_group);}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_GROUP = ".$inherit_group." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit filter ---------------------------------------------------
if($inherit_filter){
	$inherit_filter = trim($inherit_filter);
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_FILTER = '".parse_db_string($inherit_filter,250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- options ---------------------------------------------------
if($options){
	$options = trim($options);
	$prepare_string = "UPDATE LMB_CONF_FIELDS SET RELEXT = ? WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	if(!lmb_PrepareSQL($prepare_string,array($options),__FILE__,__LINE__)){$commit = 1;}
}

# --- trigger ------ ---------------------------------------------
if($trigger){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LMTRIGGER = '".parse_db_string(trim($trigger))."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- relation viewmode ---------------------------------------------------
if($relviewmode){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LISTING_VIEWMODE = '".parse_db_int(trim($relviewmode))."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- relation viewmode / boolean format ---------------------------------------------------
if($boolformat){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LISTING_VIEWMODE = '".parse_db_int(trim($boolformat))."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- relation cut ---------------------------------------------------
if(isset($relviewcut)){
	$relviewcut = $relviewcut;
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LISTING_CUT = '".parse_db_string($relviewcut,8)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- triggercount ---------------------------------------------------
if($triggercount){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET VERKNGROUP = '".parse_db_string($triggercount,1)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- textblocksize ---------------------------------------------------
if($textblocksize){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET SELECT_POOL = '".parse_db_int(trim($textblocksize),5)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- encryption ändern ---------------------------------------------*/
if(isset($encryption_mode)){
    if(empty($encryption_mode) || ($encryption_mode != 1 && $encryption_mode != 2)){$encryption_mode = 0;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET ENCRYPTION_MODE = $encryption_mode WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}
}


/* --- Agregatfunktion --------------------------------------------- */
if($aggregate){
	$aggregate = explode("_",$aggregate);

	$sqlquery =  "SELECT AGGREGATE FROM LMB_CONF_FIELDS WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$aggregate_val_ = explode(",",lmbdb_result($rs, "AGGREGATE"));
	$aggregate_val = array();
	foreach($aggregate_val_ as $key => $value){
		if($value){
			$aggregate_val[$value] = $value;
		}
	}
	if($aggregate[0] == 'true'){
		$aggregate_val[$aggregate[1]] = $aggregate[1];
	}else{
		unset($aggregate_val[$aggregate[1]]);
	}
	$aggregate_val = implode(",",$aggregate_val);

	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET AGGREGATE = '".parse_db_string($aggregate_val)."' WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Argument Editierbar ändern ---------------------------------------------*/
if($argument_edit){
	if($argument_edit == "CHECKED"){$argument_edit = LMB_DBDEF_FALSE;}else{$argument_edit = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET ARGUMENT_EDIT = $argument_edit WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- wysiwyg ändern ---------------------------------------------*/
if($wysiwyg){
	if(${"WYSIWYG_".$fieldid} OR $wysiwyg == "true"){$wysiwyg = LMB_DBDEF_TRUE;}else{$wysiwyg = LMB_DBDEF_FALSE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET WYSIWYG = $wysiwyg WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Memo Index ändern ---------------------------------------------*/
if($memoindex){
	if(${"MEMOINDEX_".$fieldid} OR $memoindex == "true"){$memoindex = LMB_DBDEF_TRUE;}else{$memoindex = LMB_DBDEF_FALSE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET INDIZE = $memoindex WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}

	$odbc_column = dbf_5(array($DBA["DBSCHEMA"],$new_gtab,"IND_".$fieldid));
	if($odbc_column["columnname"][0]){
		$present = $odbc_column["columnname"][0];
	}

	if($memoindex == LMB_DBDEF_TRUE AND !$present){
		#$sqlquery =  "ALTER TABLE $new_gtab ".LMB_DBFUNC_ADD_COLUMN_FIRST." IND_$fieldid ".LMB_DBTYPE_BOOLEAN." DEFAULT ".LMB_DBDEF_FALSE.", ".LMB_DBFUNC_ADD_COLUMN_NEXT." INDD_$fieldid ".LMB_DBTYPE_TIMESTAMP;
		$newField = array("IND_$fieldid","INDD_$fieldid");
		$newType = array(LMB_DBTYPE_BOOLEAN,LMB_DBTYPE_TIMESTAMP);
		$newDefault = array(LMB_DBDEF_FALSE,null);

		$sqlquery = dbq_29(array($GLOBALS['DBA']['DBSCHEMA'],$new_gtab,$newField,$newType,$newDefault));
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}elseif($present){
		$sqlquery = dbq_22(array($new_gtab,"IND_".$fieldid));
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$sqlquery = dbq_22(array($new_gtab,"INDD_".$fieldid));
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}

		$sqlquery =  "DELETE FROM LMB_INDIZE_D WHERE TABID = $atid AND FIELDID = $fieldid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$sqlquery =  "DELETE FROM LMB_INDIZE_DS WHERE TABID = $atid AND FIELDID = $fieldid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}

	if ($umgvar['postgres_use_fulltextsearch']) {
        require_once(COREPATH . 'admin/tools/jobs/indize.lib');
        $fieldInfo = get_fieldname($atid, $fieldid);
        $fieldName = $fieldInfo[0];

        // check vector field
        $vectorFieldName = $fieldName . '_FTS_VECTOR';
        if ($memoindex == LMB_DBDEF_TRUE) {
            addColumnIfNotExists($new_gtab, $vectorFieldName, 'TSVECTOR');
        } else {
            dropColumnIfExists($new_gtab, $vectorFieldName);
        }

        // check lang field
        $langFieldName = $fieldName . '_FTS_LANG';
        if ($memoindex == LMB_DBDEF_TRUE && postgresFtsLangColNeeded()) {
            addColumnIfNotExists($new_gtab, $langFieldName, 'REGCONFIG');
        } else {
            dropColumnIfExists($new_gtab, $langFieldName);
        }
    }
}

/* --- Tempdaten erneuern -------------------------------------- */
if($tablesync) {
	require_once(COREPATH . 'admin/tools/multiselect_refresh.lib');
	multiselectRefreshCount($atid,$fieldid);
	relationRefreshCount($atid,$fieldid);
    usergroupRefreshCount($atid,$fieldid);
	echo 'sync complete!';
}

/* --- relation popup default -------------------------------------- */
if($popupdefault) {
    if($popupdefault == "true"){$popup = LMB_DBDEF_TRUE;}else{$popup = LMB_DBDEF_FALSE;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET POPUPDEFAULT = $popup WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}
}

/* ---  datetime  --------------------------------------------- */
if(isset($datetime)){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET DATETIME = $datetime WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- datepicker  --------------------------------------------- */
if(isset($datepicker)){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SELECT_POOL = $datepicker WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Neue Schlüssel-ID ---------------------------------------------*/
if($new_keyid){
	$sqlquery =  "SELECT ID FROM ".$table_gtab[$table_id];
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$bzm = 1;
	while(lmbdb_fetch_row($rs)) {
		$sqlquery1 =  "UPDATE ".$table_gtab[$table_id]." SET ID = $bzm WHERE ID = ".lmbdb_result($rs, "ID");
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
	$bzm++;
	}
}


function convert_field($convert,$convert_size,$fieldid,$tabid,$table,$solve_dependency=null){
	global $db;
	global $lmfieldtype;
	global $action;
	global $gtab;
	global $parsetype;

	if($convert_size == 'undefined'){$convert_size = 0;}

	$sqlquery =  "SELECT DISTINCT LMB_CONF_FIELDS.FIELD_TYPE,LMB_CONF_FIELDS.DATA_TYPE,LMB_CONF_FIELDS.VERKNTABID,LMB_CONF_FIELDS.MD5TAB,LMB_CONF_FIELDS.REFINT,LMB_CONF_FIELDS.FIELD_SIZE,LMB_CONF_FIELDS.FIELD_NAME 
	FROM LMB_CONF_FIELDS 
	WHERE LMB_CONF_FIELDS.FIELD_ID = $fieldid AND LMB_CONF_FIELDS.TAB_ID = $tabid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}

	if(lmbdb_fetch_row($rs)){
		$origin["field_name"] = lmbdb_result($rs, "FIELD_NAME");
		$origin["data_type"] = lmbdb_result($rs, "DATA_TYPE");
		$origin["field_type"] = lmbdb_result($rs, "FIELD_TYPE");
		$origin["md5tab"] = lmbdb_result($rs, "MD5TAB");
		$origin["verkntabid"] = lmbdb_result($rs, "VERKNTABID");
		$origin["refint"] = lmbdb_result($rs, "REFINT");
        $origin["parse_type"] = $lmfieldtype["parse_type"][lmbdb_result($rs,"DATA_TYPE")];

		if(lmbdb_result($rs, "FIELD_SIZE")){
			$origin["field_size"] = lmbdb_result($rs, "FIELD_SIZE");
		}else{
            $origin["field_size"] = $lmfieldtype["size"][lmbdb_result($rs,"DATA_TYPE")];
		}
	}else{return false;}

	# --- convert to Select -----
	function convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,$withpool,$solve_dependency=null){
		global $db;
		global $session;
		global $lmfieldtype;

		$cut = ";";

		# zuerst Pool anlegen
		if($withpool){

			# neuen Pool anlegen
			$POOLID = next_db_id("LMB_SELECT_P");
			$sqlquery = "INSERT INTO LMB_SELECT_P (ID,ERSTUSER,NAME) VALUES($POOLID,".$session['user_id'].",'auto_pool_$POOLID')";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# Pool füllen
			$NEXTWID = next_db_id("LMB_SELECT_W");
			$NEXTPID = next_db_id("LMB_SELECT_D");
			$NEXTSORT = 1;

			$sqlquery =  "SELECT DISTINCT ".$origin["field_name"]." FROM $table";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			# --- Mehrfach-Auswahlfeld -----
			if($lmfieldtype['data_type'][$convert] == 18 OR $lmfieldtype['data_type'][$convert] == 31 OR $lmfieldtype['data_type'][$convert] == 32){
				$svalues = array();
				while(lmbdb_fetch_row($rs)){
					if($v = explode($cut,lmbdb_result($rs, $origin["field_name"]))){
						foreach ($v as $vc => $vv){
							$svalues[] = trim($vv);
						}
					}
				}
				$svalues = array_unique($svalues);
			# --- Einzel-Auswahlfeld -----
			}else{
				while(lmbdb_fetch_row($rs)){
					$svalues[] = lmbdb_result($rs, $origin["field_name"]);
				}
			}

			if($svalues){
				foreach ($svalues as $vkey => $value){
					# Mehrfachauswahl
					#if($lmfieldtype['data_type'][$convert] == 18 OR $lmfieldtype['data_type'][$convert] == 31 OR $lmfieldtype['data_type'][$convert] == 32){
						$sqlquery0 = "SELECT ID FROM LMB_SELECT_W WHERE POOL = $POOLID AND WERT = '".parse_db_string($value,255)."'";
						$rs0 = lmbdb_exec($db,$sqlquery0) or errorhandle(lmbdb_errormsg($db),$sqlquery0,$action,__FILE__,__LINE__);
						if(!$rs0) {$commit = 1;}
						if(!lmbdb_result($rs0, 'ID')){
							$sqlquery0 = "INSERT INTO LMB_SELECT_W (ID,SORT,POOL,WERT,ERSTUSER) VALUES($NEXTWID,$NEXTSORT,$POOLID,'".parse_db_string($value,255)."',".$session['user_id'].")";
							$rs0 = lmbdb_exec($db,$sqlquery0) or errorhandle(lmbdb_errormsg($db),$sqlquery0,$action,__FILE__,__LINE__);
							if(!$rs0) {$commit = 1;}
							$NEXTWID++;
							$NEXTSORT++;
						}
					#}

				}
			}

			if(!$commit){
				$sqlquery = "UPDATE LMB_CONF_FIELDS SET SELECT_POOL = $POOLID,SELECT_SORT = 'SORT' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
				$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}

		}else{
			$sqlquery = "SELECT SELECT_POOL FROM LMB_CONF_FIELDS WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$POOLID = lmbdb_result($rs, "SELECT_POOL");
		}

		# --- Eintrag Mehrfach-Auswahlfeld -----
		if($lmfieldtype['data_type'][$convert] == 18 OR $lmfieldtype['data_type'][$convert] == 31 OR $lmfieldtype['data_type'][$convert] == 32 AND $POOLID){
			$NID = next_db_id("LMB_SELECT_D");
			$sqlquery = "SELECT ID,".$origin["field_name"]." FROM $table";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			while(lmbdb_fetch_row($rs)){
				$datid = lmbdb_result($rs, "ID");
				$count = 0;
				if($ovalue = lmbdb_result($rs, $origin["field_name"])){
					$val = explode($cut,$ovalue);
					foreach ($val as $key => $value) {
						$value = trim($value);
						$sqlquery1 = "SELECT ID FROM LMB_SELECT_W WHERE WERT = '".parse_db_string($value,255)."' AND POOL = $POOLID";
						$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
						if(!$rs1) {$commit = 1;}
						$wid = lmbdb_result($rs1, "ID");
						if($wid){
							$sqlquery1 = "INSERT INTO LMB_SELECT_D (ID,ERSTUSER,TAB_ID,FIELD_ID,DAT_ID,W_ID) VALUES($NID,".$session['user_id'].",$tabid,$fieldid,".$datid.",$wid)";
							$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
							if(!$rs1) {$commit = 1;}
							$NID++;
							$count++;
						}
					}
				}

				# Anzahl anpassen
				$sqlquery2 = "UPDATE $table SET ".$origin["field_name"]." = '".$count."' WHERE ID = $datid";
				$rs2 = lmbdb_exec($db,$sqlquery2) or errorhandle(lmbdb_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
				if(!$rs2) {$commit = 1;}

			}
		}

		#lmb_convert_fieldtype($convert,$convert_type,$table,$origin,1,$solve_dependency);
	    if(!lmb_convert_fieldtype($lmfieldtype["data_type"][$convert], $lmfieldtype["parse_type"][$convert], $origin["field_name"], $lmfieldtype["size"][$convert], $convert_type, $table, 1, $solve_dependency)){$commit = 1;}

		if($commit){return false;}else{return true;}
	}

	# --- convert from Select -----
	function convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,$toselect,$solve_dependency=null){
		global $db;
		global $session;
		global $lmfieldtype;

		#if(!lmb_convert_fieldtype($convert,$convert_type,$table,$origin,null,$solve_dependency)){return false;}
	    if(!lmb_convert_fieldtype($lmfieldtype["data_type"][$convert], $lmfieldtype["parse_type"][$convert], $origin["field_name"], $lmfieldtype["size"][$convert], $convert_type, $table, null, $solve_dependency)){return false;}

		# abbrechen bei single select
		if($lmfieldtype['data_type'][$convert] == 9 OR $lmfieldtype['data_type'][$convert] == 15){return true;}

		$cut = ";";

		$sqlquery = "SELECT ID,".$origin["field_name"]." FROM $table";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		while(lmbdb_fetch_row($rs)){
			$datid = lmbdb_result($rs, "ID");
			unset($new_val);
			#if(lmbdb_result($rs, $origin["field_name"])){
				$sqlquery1 = "SELECT LMB_SELECT_W.WERT FROM LMB_SELECT_D,LMB_SELECT_W WHERE LMB_SELECT_D.TAB_ID = $tabid AND LMB_SELECT_D.FIELD_ID = $fieldid AND LMB_SELECT_D.DAT_ID = ".$datid." AND LMB_SELECT_D.W_ID = LMB_SELECT_W.ID";
				$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
				if(!$rs1) {$commit = 1;}
				while(lmbdb_fetch_row($rs1)){
					$new_val[] = lmbdb_result($rs1, "WERT");
				}
				if(is_array($new_val)){
					if($toselect){
						$new_val = $new_val[0];
					}else{
						$new_val = implode($cut,$new_val);
					}
				}
				$sqlquery1 = "UPDATE $table SET ".$origin["field_name"]." = '".parse_db_string($new_val,$lmfieldtype["size"][$convert])."' WHERE ID = ".$datid;
				$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
				if(!$rs1) {$commit = 1;}
			#}
		}

		# löschen der Multiselect-Einträge
		if($toselect){
			$sqlquery = "DELETE FROM LMB_SELECT_D WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}

		if($commit){return false;}else{return true;}
	}


	# --- convert relation -----
	function convert_relation($convert,$convert_type,$fieldid,$tabid,$tabname,$origin,$solve_dependency=null){
		global $db;
		global $session;
		global $lmfieldtype;
		global $action;
        global $DBA;

        $verkntabid = dbf_4($origin['verkntabid']);
        $md5tab = dbf_4($origin['md5tab']);

        // first change field type
        $sqlquery = "UPDATE LMB_CONF_FIELDS SET FIELD_TYPE = ".$lmfieldtype["field_type"][$convert].", DATA_TYPE = ".$lmfieldtype["data_type"][$convert]." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}

        if($verkntabid) {
            $sqlquery = "SELECT TABELLE FROM LMB_CONF_TABLES WHERE TAB_ID = $verkntabid";
            $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
            $verkntabname = lmbdb_result($rs, 'TABELLE');
        }

		// n:m -> 1:n OR 1:n -> n:m
		if(($origin["data_type"] == 24 AND $lmfieldtype['data_type'][$convert] == 27) OR ($origin["data_type"] == 24 AND $lmfieldtype['data_type'][$convert] == 27)){

            // nothing todo

        // 1:n -> 1:n simple
		}elseif($origin["data_type"] == 27 AND $lmfieldtype['data_type'][$convert] == 25){

            if(!$origin["refint"]){lmb_alert('No referential integrity aktivated. Be shure integrity is valid and activate referential integrity before converting!');return false;}

		    // add relation field
            $rel_fieldname = dbf_4('LMB_'.substr($tabname,0,12).'_'.substr($origin["field_name"],0,12).'_ID');
            if(!dbf_5(array($DBA["DBSCHEMA"],$verkntabname,$rel_fieldname))) {
                $sqlquery = dbq_29(array($DBA["DBSCHEMA"], $verkntabname, $rel_fieldname, LMB_DBTYPE_FIXED . '(18)'));
                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                if (!$rs) {return false;}
                // create index
                $indname = lmb_getConstraintName('LMB_INDV',$verkntabname,$rel_fieldname);
                $sqlquery = dbq_4(array($DBA["DBSCHEMA"],$indname,$verkntabname,$rel_fieldname));
                $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            }else{
                $sqlquery1 = "UPDATE $verkntabname SET $rel_fieldname = NULL";
                $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
            }

            // migrate relation
            $sqlquery = "SELECT ID,VERKN_ID FROM $md5tab";
            $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
            if(!$rs) {$commit = 1;}
            while(lmbdb_fetch_row($rs)){
                $rid = lmbdb_result($rs, 'ID');
                $rverknid = lmbdb_result($rs, 'VERKN_ID');

                $sqlquery1 = "UPDATE $verkntabname SET $rel_fieldname = $rid WHERE ID = $rverknid";
                $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
                if(!$rs1) {$commit = 1;}
            }

            // drop trigger
            lmb_deleteTriggerForTable($md5tab);
            lmb_updateTrigger();

            // drop relation table
            $sqlquery = dbq_28(array($md5tab));
            #$rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
            #if(!$rs) {$commit = 1;}
            lmb_alert("you can drop table $md5tab manual if conversion was successfull!\n ($sqlquery)");

            $sqlquery = "UPDATE LMB_CONF_FIELDS SET MD5TAB = '$rel_fieldname' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}

        // 1:n simple -> 1:n
		}elseif($origin["data_type"] == 25 AND $lmfieldtype['data_type'][$convert] == 27){
            global $session;

            // create relation table
            $newmd5tab = dbf_4("VERK_".lmb_substr(md5(lmb_strtoupper($table).lmb_strtoupper($field).time()),0,13));
            $sqlquery = "CREATE TABLE ".$newmd5tab." (KEYID ".LMB_DBTYPE_FIXED."(18) NOT NULL,ERSTDATUM ".LMB_DBTYPE_TIMESTAMP." DEFAULT ".LMB_DBDEF_TIMESTAMP.", ERSTUSER ".LMB_DBTYPE_SMALLINT.", ID ".LMB_DBTYPE_FIXED."(18),VERKN_ID ".LMB_DBTYPE_FIXED."(18),".LMB_DBFUNC_PRIMARY_KEY." (KEYID),SORT SMALLINT)";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}

            // migrate relation
            $sqlquery = "SELECT ID,$md5tab FROM $verkntabname WHERE $md5tab > 0";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}
            $keyid = next_db_id($newmd5tab,'KEYID');
            while(lmbdb_fetch_row($rs)){
                $rverknid = lmbdb_result($rs, 'ID');
                $rid = lmbdb_result($rs, $md5tab);

                $sqlquery1 = "INSERT INTO $newmd5tab (KEYID,ERSTDATUM,ERSTUSER,ID,VERKN_ID) VALUES ($keyid,".LMB_DBDEF_TIMESTAMP.",".$session['user_id'].",$rid,$rverknid)";
                $rs1 = lmbdb_exec($db, $sqlquery1) or errorhandle(lmbdb_errormsg($db), $sqlquery1, $action, __FILE__, __LINE__);
                if(!$rs1) {$commit = 1;}
                $keyid++;
            }

            $sqlquery = "UPDATE LMB_CONF_FIELDS SET MD5TAB = '$newmd5tab' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}

            lmb_rebuildSequences($newmd5tab,'KEYID');

            // add trigger
            $sqlquery = "SELECT FIELD_NAME FROM LMB_CONF_FIELDS WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
            $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
            if(!$rs) {$commit = 1;}
            $fieldname = lmbdb_result($rs, 'FIELD_NAME');
            lmb_relationTrigger($newmd5tab, $verkntabname, $fieldname,0,0,0);
            lmb_updateTrigger();

            // drop relation field
            $sqlquery = dbq_22(array($verkntabname,$md5tab));
            #$rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
            #if(!$rs) {$commit = 1;}
            lmb_alert("you can drop relation field $md5tab manual if conversion was successfull!\n ($sqlquery)");

        }

        if(!lmb_rebuildForeignKey(0,array($tabid),$fieldid)){
            $commit = 1;
        }

        if(!lmb_rebuildTrigger(0,array($tabid))){
            $commit = 1;
        }

		if($commit){return false;}else{return true;}
	}

	# no view
	if($gtab["typ"][$tabid] != 5){

		$ct = parse_db_type($lmfieldtype["db_datatype"][$convert],$convert_size,$origin["field_size"]);
		$convert_type = $ct[0];
		$convert_size = $ct[1];
		if(!$convert_type){return false;}

		# --- NOSELECT to SELECT -----
		if($lmfieldtype['field_type'][$convert] == 4 AND $origin['field_type'] != 4){
			if(!convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,1,$solve_dependency)){$commit = 1;}
		# --- SINGLESELECT to NOSELECT -----
		}elseif($lmfieldtype['field_type'][$convert] != 4 AND ($origin["data_type"] == 12 OR $origin["data_type"] == 14)){
			#if(!lmb_convert_fieldtype($convert,$convert_type,$table,$origin,null,$solve_dependency)){$commit = 1;}
		    if(!lmb_convert_fieldtype($lmfieldtype["data_type"][$convert], $lmfieldtype["parse_type"][$convert], $origin["field_name"], $lmfieldtype["size"][$convert], $convert_type, $table, null, $solve_dependency)){$commit = 1;}
		# --- MULTIELECT to NOSELECT -----
		}elseif($lmfieldtype['field_type'][$convert] != 4 AND ($origin["data_type"] == 31 OR $origin["data_type"] == 32 OR $origin["data_type"] == 18)){
			if(!convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,0,$solve_dependency)){$commit = 1;}
		# --- SELECT to MULTISELECT -----
		}elseif(($lmfieldtype["data_type"][$convert] == 31 OR $lmfieldtype["data_type"][$convert] == 32 OR $lmfieldtype["data_type"][$convert] == 18) AND ($origin["data_type"] == 12 OR $origin["data_type"] == 14)){
			if(!convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,0,$solve_dependency)){$commit = 1;}
		# --- MULTISELECT to SELECT -----
		}elseif(($lmfieldtype["data_type"][$convert] == 12 OR $lmfieldtype["data_type"][$convert] == 14) AND ($origin["data_type"] == 31 OR $origin["data_type"] == 32 OR $origin["data_type"] == 18)){
			if(!convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,1,$solve_dependency)){$commit = 1;}
		# --- RELATIONS -----
		}elseif($lmfieldtype['field_type'][$convert] == 11){
			if(!convert_relation($convert,$convert_type,$fieldid,$tabid,$table,$origin,$solve_dependency)){$commit = 1;}
		# --- Text to Number OR Number to Text or only only size changed ---
		}else{
			#if(!lmb_convert_fieldtype($convert,$convert_type,$table,$origin,null,$solve_dependency)){$commit = 1;}
			if(!lmb_convert_fieldtype($lmfieldtype["data_type"][$convert], $lmfieldtype["parse_type"][$convert], $origin["field_name"], $lmfieldtype["size"][$convert], $convert_type, $table, null, $solve_dependency)){$commit = 1;}
		}

		# ------------- Sonderfälle --------------
		# Währung
		if($origin["data_type"] == 30 AND $lmfieldtype["data_type"][$convert] != 30){
			$sqlquery = dbq_22(array($table,$origin["field_name"]."_C"));
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}elseif($origin["data_type"] != 30 AND $lmfieldtype["data_type"][$convert] == 30){
			#$sqlquery =  "ALTER TABLE $table ".LMB_DBFUNC_ADD_COLUMN_FIRST." ".$origin["field_name"]."_C ".LMB_DBTYPE_VARCHAR."(5)";
			$sqlquery = dbq_29(array($GLOBALS['DBA']['DBSCHEMA'],$table,$origin["field_name"].'_C',LMB_DBTYPE_VARCHAR.'(5)'));
			$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}
	}

	if(!$commit){
		$convert_size = str_replace(",",".",$convert_size);
		$csize = explode(".",$convert_size);
		$sqlquery = "UPDATE LMB_CONF_FIELDS SET FIELD_TYPE = ".$lmfieldtype["field_type"][$convert].", DATA_TYPE = ".$lmfieldtype["data_type"][$convert].", FIELD_SIZE = ".parse_db_int($csize[0]).", SCALE = ".parse_db_int($csize[1])." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}

	# --- Multi-Auswahlfeld Pool löschen -----
	if($origin["field_type"] == 4 AND $lmfieldtype["field_type"][$convert] != 4 AND !$commit){
		$sqlquery = "DELETE FROM LMB_SELECT_D WHERE FIELD_ID = $fieldid AND TAB_ID = $tabid";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}

	if($commit){return false;}else{return true;}
}

function extend_field($extend_func,$fieldid,$tabid){
	global $db;
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET EXT_TYPE = '".trim(parse_db_string($extend_func,50))."' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}

function row_size($row_size,$fieldid,$tabid){
	global $db;

    $row_size = parse_db_int($row_size);
    if($row_size == 0){$row_size = 'NULL';}

	$sqlquery = "UPDATE LMB_CONF_FIELDS SET ROW_SIZE = ".$row_size." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}

function col_hide($col_hide,$fieldid,$tabid){
	global $db;
    if($col_hide == "col_hide_CHECKED" OR $col_hide == "false"){$col_hide = LMB_DBDEF_TRUE;}else{$col_hide = LMB_DBDEF_FALSE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET COL_HIDE = ".$col_hide." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}

/* ---  regex  --------------------------------------------- */
if(isset($regex)){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET REGEX = '".trim(parse_db_string($regex,250))."' WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}


function detailsearch($detailsearch,$fieldid,$tabid){
	global $db;
    if($detailsearch == "detailsearch_CHECKED" OR $detailsearch == "false"){$detailsearch = LMB_DBDEF_TRUE;}else{$detailsearch = LMB_DBDEF_FALSE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET DETAILSEARCH = ".$detailsearch." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}

/* --- Feld Konvertieren ---------------------------------------------*/
if($convert_value AND $fieldid){
	if(!convert_field($convert_value,$convert_size,$fieldid,$atid,lmb_strtoupper($new_gtab),$solve_dependency)){$commit = 1;}
}

/* --- Extension ---------------------------------------------*/
if($extend_value AND $fieldid){
	if(!extend_field($extend_value,$fieldid,$atid)){$commit = 1;}
}

/* --- row size ---------------------------------------------*/
if(isset($row_size) AND $fieldid){
    if(!row_size($row_size,$fieldid,$atid)){$commit = 1;}
}

/* --- row view ---------------------------------------------*/
if($col_hide AND $fieldid){
    if(!col_hide($col_hide,$fieldid,$atid)){$commit = 1;}
}

/* --- detailserach---------------------------------------------*/
if($detailsearch AND $fieldid){
    if(!detailsearch($detailsearch,$fieldid,$atid)){$commit = 1;}
}

/* --- Feld hinzufügen --------------------------------------------- */
if($add and $field_name) {
	if(!add_field($field_name,$atid,$typ,$typ2,$typ_size,$ifield_id,$beschreibung,$spellingf,null,0,$add_permission,$inherit_tab,$inherit_field, add_datasync:$add_datasync)){$commit = 1;}
}

# --- Transaktion ENDE --------
lmb_EndTransaction(!$commit);



/* --- Tabellen-Liste --------------------------------------------- */
$bzm = $atid;
if($table_gtab[$bzm]) {


    // check if in sync template
    if($table_datasync[$atid]){
	    $sqlquery = "SELECT LMB_SYNC_TEMPLATE.NAME,LMB_SYNC_CONF.FIELDID,LMB_SYNC_CONF.MASTER FROM LMB_SYNC_CONF,LMB_SYNC_TEMPLATE WHERE LMB_SYNC_TEMPLATE.ID = LMB_SYNC_CONF.TEMPLATE AND LMB_SYNC_CONF.TABID = $atid AND LMB_SYNC_CONF.MASTER = ".LMB_DBDEF_TRUE;
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        while(lmbdb_fetch_row($rs)) {
            $datasynctempl['master'][lmbdb_result($rs,"FIELDID")][] = lmbdb_result($rs,"NAME");
        }
    }
    if($table_datasync[$atid]){
        $sqlquery = "SELECT LMB_SYNC_TEMPLATE.NAME,LMB_SYNC_CONF.FIELDID,LMB_SYNC_CONF.MASTER FROM LMB_SYNC_CONF,LMB_SYNC_TEMPLATE WHERE LMB_SYNC_TEMPLATE.ID = LMB_SYNC_CONF.TEMPLATE AND LMB_SYNC_CONF.TABID = $atid AND LMB_SYNC_CONF.SLAVE = ".LMB_DBDEF_TRUE;
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        while(lmbdb_fetch_row($rs)) {
            $datasynctempl['slave'][lmbdb_result($rs,"FIELDID")][] = lmbdb_result($rs,"NAME");
        }
    }

    // check for group rights
    $sqlquery = "SELECT FIELD_ID,GROUP_ID,EDIT,LMVIEW,COPY,NEED,FILTER,DEFLT,EDITRULE FROM LMB_RULES_FIELDS WHERE TAB_ID = $atid AND (LMVIEW = ".LMB_DBDEF_TRUE." OR EDIT = ".LMB_DBDEF_TRUE." OR COPY = ".LMB_DBDEF_TRUE.")";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    while(lmbdb_fetch_row($rs)) {
        $fieldrules[lmbdb_result($rs,"FIELD_ID")][] = array(
            lmbdb_result($rs,"GROUP_ID"),
            lmbdb_result($rs,"LMVIEW"),
            lmbdb_result($rs,"EDIT"),
            lmbdb_result($rs,"COPY"),
            lmbdb_result($rs,"NEED"),
            lmbdb_result($rs,"FILTER"),
            lmbdb_result($rs,"EDITRULE").
            lmbdb_result($rs,"DEFLT")
        );
    }

	/* --- Datenbank Infos --------------------------------------------- */
	$rs = dbf_5(array($DBA["DBSCHEMA"],$table_gtab[$atid],null,1),1);
	while(lmbdb_fetch_row($rs)) {
		$fieldsp_name = trim(lmb_strtoupper(lmbdb_result($rs, "COLUMN_NAME")));
		$result_fieldspecs[$fieldsp_name]["precision"] = lmbdb_result($rs, "PRECISION");
		$result_fieldspecs[$fieldsp_name]["scale"] = lmbdb_result($rs, "SCALE");
		$result_fieldspecs[$fieldsp_name]["type_name"] = lmbdb_result($rs, "TYPE_NAME");
	}

	if($ftid AND is_numeric($ftid)){$sql = "AND LMB_CONF_FIELDS.FIELD_ID = $ftid";}

    #,LMB_FIELD_TYPES.DATA_TYPE_EXP,LMB_FIELD_TYPES.FORMAT,LMB_FIELD_TYPES.FIELD_TYPE,LMB_FIELD_TYPES.DATA_TYPE,LMB_FIELD_TYPES.ID AS DATA_TYPE_ID,LMB_CONF_FIELDS.POPUPDEFAULT,LMB_CONF_FIELDS.VERKNGROUP
	
	/* --- Tabellen-Abfrage --------------------------------------------- */
	$sqlquery = "SELECT LMB_CONF_FIELDS.REGEX,LMB_CONF_FIELDS.COL_HIDE,LMB_CONF_FIELDS.DETAILSEARCH,LMB_CONF_FIELDS.CHECKSUM,LMB_CONF_FIELDS.ROW_SIZE,LMB_CONF_FIELDS.HASRECVERKN,LMB_CONF_FIELDS.FIELD_TYPE,LMB_CONF_FIELDS.DATA_TYPE,LMB_CONF_FIELDS.FULLSEARCH,LMB_CONF_FIELDS.SEARCHVERSION,LMB_CONF_FIELDS.MULTILANG,LMB_CONF_FIELDS.VERKNTREE,LMB_CONF_FIELDS.LISTING_VIEWMODE,LMB_CONF_FIELDS.LISTING_CUT,LMB_CONF_FIELDS.AGGREGATE,LMB_CONF_FIELDS.COLLREPLACE,LMB_CONF_FIELDS.FIELD_SIZE,LMB_CONF_FIELDS.RELEXT,LMB_CONF_FIELDS.AJAXPOST,LMB_CONF_FIELDS.POTENCY,LMB_CONF_FIELDS.EDITRULE,LMB_CONF_FIELDS.VIEWRULE,LMB_CONF_FIELDS.QUICKSEARCH,LMB_CONF_FIELDS.LMTRIGGER,LMB_CONF_FIELDS.DEFAULTVALUE,LMB_CONF_FIELDS.MAINFIELD,LMB_CONF_FIELDS.VERKNTABLETYPE,LMB_CONF_FIELDS.EXT_TYPE,LMB_CONF_FIELDS.INHERIT_TAB,LMB_CONF_FIELDS.INHERIT_EVAL,LMB_CONF_FIELDS.INHERIT_GROUP,LMB_CONF_FIELDS.INHERIT_SEARCH,LMB_CONF_FIELDS.INHERIT_FILTER,LMB_CONF_FIELDS.INHERIT_FIELD,LMB_CONF_FIELDS.INDEXED,LMB_CONF_FIELDS.SELECT_CUT,LMB_CONF_FIELDS.SELECT_POOL,LMB_CONF_FIELDS.VERKNSEARCH,LMB_CONF_FIELDS.WYSIWYG,LMB_CONF_FIELDS.DATETIME,LMB_CONF_FIELDS.MD5TAB,LMB_CONF_FIELDS.FIELD_ID,LMB_CONF_FIELDS.CURRENCY,LMB_CONF_FIELDS.NFORMAT,LMB_CONF_FIELDS.INDIZE,LMB_CONF_FIELDS.GROUPABLE,LMB_CONF_FIELDS.ARGUMENT_EDIT,LMB_CONF_FIELDS.VERKNTABID,LMB_CONF_FIELDS.ARGUMENT,LMB_CONF_FIELDS.DYNSEARCH,LMB_CONF_FIELDS.ISUNIQUE,LMB_CONF_FIELDS.FIELDKEY,LMB_CONF_FIELDS.GENLINK,LMB_CONF_FIELDS.FIELD_NAME,LMB_CONF_FIELDS.ARTLEISTE,LMB_CONF_FIELDS.VERKNFIELDID,LMB_CONF_FIELDS.BESCHREIBUNG,LMB_CONF_FIELDS.SPELLING,LMB_CONF_FIELDS.ARGUMENT_TYP,LMB_CONF_FIELDS.POPUPDEFAULT,LMB_CONF_FIELDS.VERKNGROUP, LMB_CONF_FIELDS.ENCRYPTION_MODE
                    FROM LMB_CONF_FIELDS
					WHERE LMB_CONF_FIELDS.TAB_ID = $atid $sql
					ORDER BY LMB_CONF_FIELDS.SORT";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$bzm1 = 1;
	while(lmbdb_fetch_row($rs)) {
		$fieldsp_name = lmb_strtoupper(lmbdb_result($rs, "FIELD_NAME"));
        $field_id = lmbdb_result($rs, "FIELD_ID");
		$result_fieldtype[$table_gtab[$bzm]]["field_id"][$bzm1] = $field_id;
		$result_fieldtype[$table_gtab[$bzm]]["field"][$bzm1] = $fieldsp_name;
		$result_fieldtype[$table_gtab[$bzm]]["beschreibung_feld"][$bzm1] = lmbdb_result($rs, "BESCHREIBUNG");
		$result_fieldtype[$table_gtab[$bzm]]["fieldtype"][$bzm1] = lmbdb_result($rs, "FIELD_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["datatype"][$bzm1] = lmbdb_result($rs, "DATA_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["spelling"][$bzm1] = lmbdb_result($rs, "SPELLING");
		$result_fieldtype[$table_gtab[$bzm]]["argument"][$bzm1] = trim(lmbdb_result($rs, "ARGUMENT")); # longtext handle
		$result_fieldtype[$table_gtab[$bzm]]["argument_typ"][$bzm1] = lmbdb_result($rs, "ARGUMENT_TYP");
		$result_fieldtype[$table_gtab[$bzm]]["argument_edit"][$bzm1] = lmbdb_result($rs, "ARGUMENT_EDIT");
		$result_fieldtype[$table_gtab[$bzm]]["genlink"][$bzm1] = lmbdb_result($rs, "GENLINK");
		$result_fieldtype[$table_gtab[$bzm]]["verkntab"][$bzm1] = lmbdb_result($rs, "MD5TAB");
		$result_fieldtype[$table_gtab[$bzm]]["verkntabid"][$bzm1] = lmbdb_result($rs, "VERKNTABID");
		$result_fieldtype[$table_gtab[$bzm]]["verknfieldid"][$bzm1] = lmbdb_result($rs, "VERKNFIELDID");
        $result_fieldtype[$table_gtab[$bzm]]["verkntabletype"][$bzm1] = lmbdb_result($rs, "VERKNTABLETYPE");
        $result_fieldtype[$table_gtab[$bzm]]["hasrecverkn"][$bzm1] = lmbdb_result($rs, "HASRECVERKN");
		$result_fieldtype[$table_gtab[$bzm]]["fieldkey"][$bzm1] = lmbdb_result($rs, "FIELDKEY");
		$result_fieldtype[$table_gtab[$bzm]]["mainfield"][$bzm1] = lmbdb_result($rs, "MAINFIELD");
		$result_fieldtype[$table_gtab[$bzm]]["unique"][$bzm1] = lmbdb_result($rs, "ISUNIQUE");
		$result_fieldtype[$table_gtab[$bzm]]["artleiste"][$bzm1] = lmbdb_result($rs, "ARTLEISTE");
		$result_fieldtype[$table_gtab[$bzm]]["dynsearch"][$bzm1] = lmbdb_result($rs, "DYNSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["ajaxsave"][$bzm1] = lmbdb_result($rs, "AJAXPOST");
		$result_fieldtype[$table_gtab[$bzm]]["groupable"][$bzm1] = lmbdb_result($rs, "GROUPABLE");
		$result_fieldtype[$table_gtab[$bzm]]["memoindex"][$bzm1] = lmbdb_result($rs, "INDIZE");
		$result_fieldtype[$table_gtab[$bzm]]["format"][$bzm1] = lmbdb_result($rs, "NFORMAT");
		$result_fieldtype[$table_gtab[$bzm]]["currency"][$bzm1] = lmbdb_result($rs, "CURRENCY");
		$result_fieldtype[$table_gtab[$bzm]]["datetime"][$bzm1] = lmbdb_result($rs, "DATETIME");
		$result_fieldtype[$table_gtab[$bzm]]["wysiwyg"][$bzm1] = lmbdb_result($rs, "WYSIWYG");
		$result_fieldtype[$table_gtab[$bzm]]["select_pool"][$bzm1] = lmbdb_result($rs, "SELECT_POOL");
		$result_fieldtype[$table_gtab[$bzm]]["select_cut"][$bzm1] = lmbdb_result($rs, "SELECT_CUT");
		$result_fieldtype[$table_gtab[$bzm]]["indexed"][$bzm1] = lmbdb_result($rs, "INDEXED");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_tab"][$bzm1] = lmbdb_result($rs, "INHERIT_TAB");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_field"][$bzm1] = lmbdb_result($rs, "INHERIT_FIELD");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_group"][$bzm1] = lmbdb_result($rs, "INHERIT_GROUP");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_search"][$bzm1] = lmbdb_result($rs, "INHERIT_SEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_eval"][$bzm1] = lmbdb_result($rs, "INHERIT_EVAL");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_filter"][$bzm1] = lmbdb_result($rs, "INHERIT_FILTER");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_tab"][$bzm1] = lmbdb_result($rs, "INHERIT_TAB");
		$result_fieldtype[$table_gtab[$bzm]]["ext_type"][$bzm1] = lmbdb_result($rs, "EXT_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["trigger"][$bzm1] = explode(",",lmbdb_result($rs, "LMTRIGGER"));
		$result_fieldtype[$table_gtab[$bzm]]["domain_default"][$bzm1] = lmbdb_result($rs, "DEFAULTVALUE");
		$result_fieldtype[$table_gtab[$bzm]]["quicksearch"][$bzm1] = lmbdb_result($rs, "QUICKSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["view_rule"][$bzm1] = lmbdb_result($rs, "VIEWRULE");
		$result_fieldtype[$table_gtab[$bzm]]["edit_rule"][$bzm1] = lmbdb_result($rs, "EDITRULE");
		$result_fieldtype[$table_gtab[$bzm]]["potency"][$bzm1] = lmbdb_result($rs, "POTENCY");
		$result_fieldtype[$table_gtab[$bzm]]["options"][$bzm1] = trim(lmbdb_result($rs, "RELEXT")); # longtext handle
		$result_fieldtype[$table_gtab[$bzm]]["field_size"][$bzm1] = lmbdb_result($rs, "FIELD_SIZE");
        $result_fieldtype[$table_gtab[$bzm]]["row_size"][$bzm1] = lmbdb_result($rs, "ROW_SIZE");
        $result_fieldtype[$table_gtab[$bzm]]["col_hide"][$bzm1] = lmbdb_result($rs, "COL_HIDE");
        $result_fieldtype[$table_gtab[$bzm]]["detailsearch"][$bzm1] = lmbdb_result($rs, "DETAILSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["collreplace"][$bzm1] = lmbdb_result($rs, "COLLREPLACE");
		$result_fieldtype[$table_gtab[$bzm]]["multilang"][$bzm1] = lmbdb_result($rs, "MULTILANG");
		$result_fieldtype[$table_gtab[$bzm]]["searchversion"][$bzm1] = lmbdb_result($rs, "SEARCHVERSION");
        $result_fieldtype[$table_gtab[$bzm]]["checksum"][$bzm1] = lmbdb_result($rs, "CHECKSUM");
		$result_fieldtype[$table_gtab[$bzm]]["aggregate"][$bzm1] = explode(",",lmbdb_result($rs, "AGGREGATE"));
		$result_fieldtype[$table_gtab[$bzm]]["listing_viewmode"][$bzm1] = lmbdb_result($rs, "LISTING_VIEWMODE");
		$result_fieldtype[$table_gtab[$bzm]]["listing_cut"][$bzm1] = lmbdb_result($rs, "LISTING_CUT");
		$result_fieldtype[$table_gtab[$bzm]]["verkntree"][$bzm1] = lmbdb_result($rs, "VERKNTREE");
		$result_fieldtype[$table_gtab[$bzm]]["triggercount"][$bzm1] = lmbdb_result($rs, "VERKNGROUP");
        $result_fieldtype[$table_gtab[$bzm]]["fullsearch"][$bzm1] = lmbdb_result($rs, "FULLSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["scale"][$bzm1] = $result_fieldspecs[$fieldsp_name]["scale"];
		$result_fieldtype[$table_gtab[$bzm]]["precision"][$bzm1] = $result_fieldspecs[$fieldsp_name]["precision"];
		$result_fieldtype[$table_gtab[$bzm]]["type_name"][$bzm1] = $result_fieldspecs[$fieldsp_name]["type_name"];
        $result_fieldtype[$table_gtab[$bzm]]["encryption_mode"][$bzm1] = lmbdb_result($rs, "ENCRYPTION_MODE");
        $result_fieldtype[$table_gtab[$bzm]]["beschreibung_typ"][$bzm1] = $lmfieldtype["name"][lmbdb_result($rs,"DATA_TYPE")];
        $result_fieldtype[$table_gtab[$bzm]]["format_typ"][$bzm1] = $lmfieldtype["description"][lmbdb_result($rs,"DATA_TYPE")];
        $result_fieldtype[$table_gtab[$bzm]]["datatype_id"][$bzm1] = $lmfieldtype["id"][lmbdb_result($rs,"DATA_TYPE")];
        $result_fieldtype[$table_gtab[$bzm]]["regex"][$bzm1] = htmlentities(lmbdb_result($rs, "REGEX"),ENT_QUOTES,$GLOBALS["umgvar"]["charset"]) ;

        if (lmbdb_result($rs, "POPUPDEFAULT")) {$result_fieldtype[$table_gtab[$bzm]]["popupdefault"][$bzm1] = 1;}
		if(lmbdb_result($rs, "VERKNSEARCH")){$result_fieldtype[$table_gtab[$bzm]]["verknsearch"][$bzm1] = lmbdb_result($rs, "VERKNSEARCH");}else{$result_fieldtype[$table_gtab[$bzm]]["verknsearch"][$bzm1] = array();}

		if(lmbdb_result($rs, "VERKNTABID")){
			$sqlquery1 = "	SELECT TABELLE,BESCHREIBUNG FROM LMB_CONF_TABLES WHERE TAB_ID = ".lmbdb_result($rs, "VERKNTABID");
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			$result_fieldtype[$table_gtab[$bzm]]["verkn"][$bzm1] = lmbdb_result($rs1, "TABELLE");
		}

        /*
		if(lmbdb_result($rs, "VERKNFIELDID")){
			$sqlquery1 = "	SELECT FIELD_NAME,SPELLING,MD5TAB FROM LMB_CONF_FIELDS WHERE TAB_ID = $atid AND FIELD_ID = ".lmbdb_result($rs, "VERKNFIELDID");
			$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			$result_fieldtype[$table_gtab[$bzm]]["verknfield"][$bzm1] = lmbdb_result($rs1, "FIELD_NAME");
		}*/

        // backward 1:n direct md5 fieldname
        if($result_fieldtype[$table_gtab[$bzm]]["datatype"][$bzm1] == 25 AND $result_fieldtype[$table_gtab[$bzm]]["verkntabletype"][$bzm1] == 2) {
			$sqlquery1 = "SELECT MD5TAB FROM LMB_CONF_FIELDS WHERE TAB_ID = ".$result_fieldtype[$table_gtab[$bzm]]["verkntabid"][$bzm1]." AND FIELD_ID = ".$result_fieldtype[$table_gtab[$bzm]]["hasrecverkn"][$bzm1];
            $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
            $result_fieldtype[$table_gtab[$bzm]]["verkntab"][$bzm1] = lmbdb_result($rs1, "MD5TAB");
        }

		if(lmbdb_result($rs, "ARGUMENT_TYP")){$gfield[$atid]["argument_typ"][lmbdb_result($rs, "FIELD_ID")] = lmbdb_result($rs, "ARGUMENT_TYP");}

		if(lmb_checkViewDependency($table_gtab[$bzm],$result_fieldtype[$table_gtab[$bzm]]["field"][$bzm1])){
		    $result_fieldtype[$table_gtab[$bzm]]["view_dependency"][$bzm1] = 1;
		}

        // sync Infos
        $result_fieldtype[$table_gtab[$bzm]]["sync_master"][$bzm1] = $datasynctempl['master'][$field_id];
        $result_fieldtype[$table_gtab[$bzm]]["sync_slave"][$bzm1] = $datasynctempl['slave'][$field_id];

        // group rights
        $result_fieldtype[$table_gtab[$bzm]]["group_rights"][$bzm1] = $fieldrules[$field_id];

		$bzm1++;
	}
}

?>
