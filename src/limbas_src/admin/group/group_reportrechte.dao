<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */




if($action=='setup_group_reportrechte'){$ruletype = 1;}
elseif($action=='setup_group_forms'){$ruletype = 2;}
elseif($action=='setup_group_diags'){$ruletype = 3;}
elseif($action=='setup_group_reminder'){$ruletype = 4;}
elseif($action=='setup_group_workfl'){$ruletype = 5;}
else{return false;}

/* --- Ãœbergruppe --------------------------------------------- */
$sqlquery = "SELECT LEVEL FROM LMB_GROUPS WHERE GROUP_ID = $ID";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(lmbdb_result($rs, "LEVEL")){$group_level = lmbdb_result($rs, "LEVEL");}else{$group_level = 0;}

function resullist_($typ,$myrule=null){
	global $db;
	global $session;
	global $ruletype;

	if($typ == 1){
		$sqlquery = "SELECT DISTINCT LMB_REPORT_LIST.ID,LMB_REPORT_LIST.GROUPLIST,LMB_REPORT_LIST.NAME,LMB_REPORT_LIST.REFERENZ_TAB
		FROM LMB_REPORT_LIST
		UNION
		SELECT DISTINCT LMB_REPORT_LIST.ID,LMB_REPORT_LIST.GROUPLIST,LMB_REPORT_LIST.NAME,LMB_REPORT_LIST.REFERENZ_TAB
		FROM LMB_REPORT_LIST
		WHERE LMB_REPORT_LIST.REFERENZ_TAB = -1
		ORDER BY REFERENZ_TAB,NAME";
	}elseif($typ == 2){
		$sqlquery = "SELECT LMB_FORM_LIST.NAME,LMB_FORM_LIST.ID,LMB_FORM_LIST.REDIRECT,LMB_FORM_LIST.FORM_TYP,LMB_FORM_LIST.REFERENZ_TAB
		FROM LMB_FORM_LIST
		ORDER BY REFERENZ_TAB,NAME";
	}elseif($typ == 3){
		$sqlquery = "SELECT LMB_CHART_LIST.ID,LMB_CHART_LIST.TAB_ID AS REFERENZ_TAB,LMB_CHART_LIST.DIAG_NAME AS NAME,LMB_CHART_LIST.DIAG_DESC,LMB_CHART_LIST.TEMPLATE FROM LMB_CHART_LIST";
	}elseif($typ == 4){
		$sqlquery = "SELECT LMB_REMINDER_LIST.ID,LMB_REMINDER_LIST.TAB_ID AS REFERENZ_TAB,LMB_REMINDER_LIST.NAME FROM LMB_REMINDER_LIST";
	}elseif($typ == 5){
		$sqlquery = "SELECT LMB_WFL.ID, LMB_WFL.NAME FROM LMB_WFL";
	}
	
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$bzm = 1;

    while(lmbdb_fetch_row($rs)) {
        $key = lmbdb_result($rs, "ID");
        $gtabid = parse_db_int(lmbdb_result($rs, "REFERENZ_TAB"));
        if($gtabid <= 0){$gtabid = 0;}
        if($myrule[$key] OR !$myrule){
            $gformlist[$gtabid]["id"][$key] = lmbdb_result($rs, "ID");
            $gformlist[$gtabid]["name"][$key] = lmbdb_result($rs, "NAME");
        }
    }

	return $gformlist;
}

function group_list($ID,$first,$addsubgroup,$typ){
	global $db;
	global $action;
	
	if($ID){
		$sqlquery = "SELECT GROUP_ID FROM LMB_GROUPS WHERE LEVEL = $ID";
	    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	    if(!$rs) {$commit = 1;}
	    while(lmbdb_fetch_row($rs)) {
			group_list(lmbdb_result($rs, "GROUP_ID"),0,$addsubgroup,$typ);
		}
	}

    set_rules($ID,$first,$addsubgroup,$typ);

}



function set_rules($ID,$first,$addsubgroup,$typ){
	global $db;
	global $setrule;
	global $sethidden;
    global $setedit;
	global $editsethidden;
    global $editsetedit;
    global $editsetrule;
	global $gtab;

	$rulelist = resullist_($typ);
	if($rulelist){
	foreach ($rulelist as $key => $value){
		if($value["id"]){
		foreach ($value["id"] as $key2 => $value2){
			if($value2){
				if($addsubgroup != 1 AND !$first AND ($sethidden[$value2] OR $setrule[$value2])){continue;}

				$sqlquery = "SELECT ID,HIDDEN,EDITABLE,1 AS PERM FROM LMB_RULES_REPFORM WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
				$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
                $hasrule = lmbdb_result($rs, "PERM");

                if(lmbdb_result($rs, "PERM") == $setrule[$value2]){
                    $editsetrule[$value2] = null;
                }
                if(lmbdb_result($rs, "HIDDEN") == $sethidden[$value2]){
                    $editsethidden[$value2] = null;
                }
                if(lmbdb_result($rs, "EDITABLE") == $setedit[$value2]){
                    $editsetedit[$value2] = null;
                }

                if(!$editsetrule[$value2] && !$editsethidden[$value2] && !$editsetedit[$value2]){continue;}

				if($hasrule){
				    if(!$setrule[$value2]) {
                        $sqlquery = "DELETE FROM LMB_RULES_REPFORM WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
                        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
                        if(!$rs) {$commit = 1;}
                    }else {
                        if($editsethidden[$value2]){
                            if ($sethidden[$value2]) {
                                $sqlquery = "UPDATE LMB_RULES_REPFORM SET HIDDEN = " . LMB_DBDEF_TRUE . " WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
                                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                                if (!$rs) {
                                    $commit = 1;
                                }
                            } elseif (!$sethidden[$value2]) {
                                $sqlquery = "UPDATE LMB_RULES_REPFORM SET HIDDEN = " . LMB_DBDEF_FALSE . " WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
                                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                                if (!$rs) {
                                    $commit = 1;
                                }
                            }
                        }
                        if($editsetedit[$value2]) {
                            if ($setedit[$value2]) {
                                $sqlquery = "UPDATE LMB_RULES_REPFORM SET EDITABLE = " . LMB_DBDEF_TRUE . " WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
                                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                                if (!$rs) {
                                    $commit = 1;
                                }
                            } elseif (!$setedit[$value2]) {
                                $sqlquery = "UPDATE LMB_RULES_REPFORM SET EDITABLE = " . LMB_DBDEF_FALSE . " WHERE GROUP_ID = $ID AND REPFORM_ID = $value2 AND TYP = $typ";
                                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                                if (!$rs) {
                                    $commit = 1;
                                }
                            }
                        }
					}
                }elseif($setrule[$value2]){
					$NEXTID = next_db_id("LMB_RULES_REPFORM");
					$sqlquery = "INSERT INTO LMB_RULES_REPFORM (ID,TYP,GROUP_ID,LMVIEW,REPFORM_ID) VALUES ($NEXTID,$typ,$ID,".LMB_DBDEF_TRUE.",$value2)";
					$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
					if(!$rs) {$commit = 1;}
                }
			}
		}}
	}}
}

if($change_rules){
	group_list($ID,1,$addsubgroup,$ruletype);
}

if($group_level){
	$sqlquery = "SELECT ID,REPFORM_ID,TYP,LMVIEW,HIDDEN,EDITABLE FROM LMB_RULES_REPFORM WHERE GROUP_ID = $group_level AND TYP = $ruletype";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)) {
		$id = lmbdb_result($rs, "REPFORM_ID");
		$levelrule["hasview"][$id] = lmbdb_result($rs, "LMVIEW");
        $levelrule["hasedit"][$id] = lmbdb_result($rs, "EDITABLE");
	}
}

$sqlquery = "SELECT ID,REPFORM_ID,TYP,LMVIEW,HIDDEN,EDITABLE FROM LMB_RULES_REPFORM WHERE GROUP_ID = $ID AND TYP = $ruletype";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
while(lmbdb_fetch_row($rs)) {
	$id = lmbdb_result($rs, "REPFORM_ID");
	$grouprule["hasview"][$id] = lmbdb_result($rs, "LMVIEW");
	$grouprule["hashidden"][$id] = lmbdb_result($rs, "HIDDEN");
    $grouprule["hasedit"][$id] = lmbdb_result($rs, "EDITABLE");
}

if($session["user_id"] != 1){
	$sqlquery = "SELECT ID,REPFORM_ID,TYP,LMVIEW,HIDDEN FROM LMB_RULES_REPFORM WHERE GROUP_ID = ".$session["group_id"]." AND TYP = $ruletype";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)) {
		$id = lmbdb_result($rs, "REPFORM_ID");
		$myrule[$id] = lmbdb_result($rs, "LMVIEW");
	}
}else{
	$group_level = 0;
}


$rulelist_ = resullist_($ruletype,$myrule);

?>
