<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */



if(!$tab){$tab = 3;}



global $new_template, 
       $add_template, 
       $drop_template, 
       $setting_template, 
       $add_slave, 
       $new_slavename, 
       $action, 
       $template_mode, 
       $new_slaveuser, 
       $new_slavepass, 
       $drop_slave, 
       $edit_slave, 
       $slave,
       $edit_template,
       $rules,
       $templ_conf,
       $popup,
       $template,
       $templ_params;


if($new_template AND $add_template){
    $NEXTID = next_db_id("LMB_SYNC_TEMPLATE"); 
    $sqlquery = "INSERT INTO LMB_SYNC_TEMPLATE (ID, NAME) VALUES($NEXTID, '".parse_db_string($new_template,50)."')";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

if(is_numeric($drop_template)){
    $sqlquery = "DELETE FROM LMB_SYNC_TEMPLATE WHERE ID = ".parse_db_int($drop_template);
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    $sqlquery = "DELETE FROM LMB_SYNC_CONF WHERE TEMPLATE = ".parse_db_int($drop_template);
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

if(is_numeric($setting_template)){
    $sqlquery = "UPDATE LMB_SYNC_TEMPLATE SET CONFLICT_MODE = ".parse_db_int($template_mode[$setting_template])." WHERE ID = ".parse_db_int($setting_template);
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}







if($add_slave AND $new_slavename){
    $NEXTID = next_db_id("LMB_SYNC_CLIENTS"); 
    $sqlquery = "INSERT INTO LMB_SYNC_CLIENTS (ID,NAME,SLAVE_URL,SLAVE_USERNAME,SLAVE_PASS) VALUES($NEXTID, '".parse_db_string($new_slavename,50)."', '".parse_db_string($new_slaveurl,100)."', '".parse_db_string($new_slaveuser,20)."', '".parse_db_string($new_slavepass,20)."')";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}


if(is_numeric($drop_slave)){
    $sqlquery = "DELETE FROM LMB_SYNC_CLIENTS WHERE ID = ".parse_db_int($drop_slave);
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}




if($edit_slave){
    foreach($slave['edit'] as $tkey => $tval){
        if(!$tval){continue;}
        $sqlquery = "UPDATE LMB_SYNC_CLIENTS SET 
            NAME = '".parse_db_string($slave['name'][$tkey],50)."',
            SLAVE_URL = '".parse_db_string($slave['url'][$tkey],100)."',
            SLAVE_USERNAME = '".parse_db_string($slave['username'][$tkey],20)."',
            SLAVE_PASS = '".parse_db_string($slave['pass'][$tkey],20)."',
            RS_PATH = '".parse_db_string($slave['rs_path'][$tkey],100)."',
            RS_USER = '".parse_db_string($slave['rs_user'][$tkey],20)."',
            RS_PARAMS = '".parse_db_string($slave['rs_params'][$tkey],250)."',
            ACTIVE = ".parse_db_bool($slave['active'][$tkey])."
        WHERE ID = $tkey";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    }
}

if($edit_template AND $rules){
    
    $arule = explode("|",$rules);
	foreach($arule as $tkey => $tval){
        $srule = explode("_",$arule[$tkey]);

        // params
        if($srule[2] == 3) {

            $paramID = null;
            $sqlquery = "SELECT ID FROM LMB_SYNC_PARAMS WHERE TEMPLATE = ".parse_db_int($template)." AND TABID = " . parse_db_int($srule[0]);
            $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
            if (!$rs) {$commit = 1;}
            $paramID = lmbdb_result($rs, "ID");

            if($paramID){
                $sqlquery = "UPDATE LMB_SYNC_PARAMS SET PARAMS = '".parse_db_string($templ_params[$srule[0]], 400)."' WHERE ID = $paramID";
                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                if (!$rs) {
                    $commit = 1;
                }
            }else {
                $NEXTID = next_db_id("LMB_SYNC_PARAMS");
                $sqlquery = "INSERT INTO LMB_SYNC_PARAMS (ID,TEMPLATE,TABID,PARAMS) VALUES( $NEXTID, " . parse_db_int($template) . "," . parse_db_int($srule[0]) . ",'" . parse_db_string($templ_params[$srule[0]], 400) . "')";
                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                if (!$rs) {
                    $commit = 1;
                }
            }
        // field config
        }else {
            $sqlquery = "DELETE FROM LMB_SYNC_CONF WHERE TABID = " . parse_db_int($srule[0]) . " AND FIELDID = " . parse_db_int($srule[1]) . " AND TEMPLATE = " . parse_db_int($template);
            $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);

            // add
            if ($templ_conf[$srule[0]][$srule[1]][1] OR $templ_conf[$srule[0]][$srule[1]][2]) {
                $NEXTID = next_db_id("LMB_SYNC_CONF");
                $sqlquery = "INSERT INTO LMB_SYNC_CONF (ID,TABID,FIELDID,TEMPLATE,MASTER,SLAVE) VALUES( $NEXTID, " . parse_db_int($srule[0]) . "," . parse_db_int($srule[1]) . "," . parse_db_int($template) . "," . parse_db_bool($templ_conf[$srule[0]][$srule[1]][1]) . "," . parse_db_bool($templ_conf[$srule[0]][$srule[1]][2]) . ")";
                $rs = lmbdb_exec($db, $sqlquery) or errorhandle(lmbdb_errormsg($db), $sqlquery, $action, __FILE__, __LINE__);
                if (!$rs) {$commit = 1;}
            }

        }
    
    }
}

$result_slave = lmb_GetSyncSlaves();

$sqlquery = "SELECT ID,NAME,CONFLICT_MODE FROM LMB_SYNC_TEMPLATE WHERE TABID IS NULL OR TABID = 0 ORDER BY NAME";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
while(lmbdb_fetch_row($rs)) {
    $tid = lmbdb_result($rs, "ID");
	$result_template['name'][$tid] = lmbdb_result($rs, "NAME");
	$result_template['mode'][$tid] = lmbdb_result($rs, "CONFLICT_MODE");
}

$sqlquery = "SELECT ID,TABID,PARAMS FROM LMB_SYNC_PARAMS WHERE TEMPLATE = " . parse_db_int($template);
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
while(lmbdb_fetch_row($rs)) {
	$result_params['params'][lmbdb_result($rs, "TABID")] = lmbdb_result($rs, "PARAMS");
}

$sqlquery = "SELECT ID,TEMPLATE,TABID,FIELDID,MASTER,SLAVE FROM LMB_SYNC_CONF";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
while(lmbdb_fetch_row($rs)) {
    $cid = lmbdb_result($rs, "ID");
    $ctabid = lmbdb_result($rs, "TABID");
    $cfieldid = lmbdb_result($rs, "FIELDID");
    $ctemplate = lmbdb_result($rs, "TEMPLATE");

    $result_conf[$ctemplate][$ctabid][$cfieldid]['id'] = $cid;
	$result_conf[$ctemplate][$ctabid][$cfieldid]['master'] = lmbdb_result($rs, "MASTER");
	$result_conf[$ctemplate][$ctabid][$cfieldid]['slave'] = lmbdb_result($rs, "SLAVE");
}


if($popup){$is_popup = explode(";",$popup);}




$sqlquery = "SELECT * FROM LDMS_STRUCTURE WHERE TYP = 1 OR TYP = 3 OR TYP = 7 OR TYP = 5 ORDER BY TYP,NAME";
$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(!$rs){$commit = 1;}

# ------------ Ã–ffentlicher Ordner ------------------------------
while(lmbdb_fetch_row($rs)) {
    $id = lmbdb_result($rs, "ID");
    $file_struct["id"][$id] = $id;
    $file_struct["name"][$id] = lmbdb_result($rs, "NAME");
    $file_struct["level"][$id] = lmbdb_result($rs, "LEVEL");
    $file_struct["typ"][$id] = lmbdb_result($rs, "TYP");
}

function files1($template,$LEVEL,$id='',$colid='',$rec=0){
    global $file_struct;
    global $lang;
    global $dspl_;
    global $result_conf;

    if($LEVEL){
        echo '<div class="collapse multi-collapse '.((is_array($dspl_) && in_array($id,$dspl_))?'show':'').'" '.(!empty($colid)?'id="'.$colid.'"':'').' data-id="'.$id.'" data-level="'.$LEVEL.'">';
    }else{
        echo '<div class="row"><div class="offset-8 col-2 text-center">master</div><div class="col-2 text-center">client</div></div>';
    }

    $lhtml = '%s';
    for($l=0;$l<=$rec;$l++) {
        $lhtml = sprintf($lhtml, '<span class="ps-2">%s</span>');
    }

    foreach ($file_struct["id"] as $bzm => $value) {
        if($file_struct["level"][$bzm] == $LEVEL){
            $id = $file_struct["id"][$bzm];
            $colid = 'f_'.$LEVEL.'_'.$id;

            if(is_array($file_struct["level"]) && in_array($file_struct["id"][$bzm],$file_struct["level"])){
                if(is_array($dspl_) && in_array($file_struct["id"][$bzm],$dspl_)){$pis = "plusonly.gif";}else{$pis = "minusonly.gif";}
                $next = 1;
                $pic = '<img src="assets/images/legacy/outliner/'.$pis.'" data-bs-toggle="collapse" data-bs-target="#'.$colid.'" class="cursor-pointer">';
            }else{
                $next = 0;
                $pic = '<IMG SRC="assets/images/legacy/outliner/blank.gif">';
            }

            echo '<div class="row clearfix" title="'.htmlentities($file_struct["name"][$bzm],ENT_QUOTES,$GLOBALS["umgvar"]["charset"]).'">';

            echo '<div class="col-8">';
            echo sprintf($lhtml, $pic . '<i class="lmb-icon lmb-folder-closed"></i>' . $file_struct['name'][$bzm]);
            echo '</div>';

            echo '<div class="col-2 text-center">';

            # --- master ---
            echo "<INPUT TYPE=\"CHECKBOX\" CLASS=\"checkb\" NAME=\"templ_conf[-1][$id][1]\" onclick=\"save_rules('-1','$id',1)\" VALUE=\"1\" ";
            if($result_conf[$template][-1][$id]['master']) echo 'checked';
            echo ">";

            echo '</div>';

            echo '<div class="col-2 text-center">';

            # --- client ---
            echo "<INPUT TYPE=\"CHECKBOX\" CLASS=\"checkb\" NAME=\"templ_conf[-1][$id][2]\" onclick=\"save_rules('-1','$id',2)\" VALUE=\"1\"";
            if($result_conf[$template][-1][$id]['slave']) echo 'checked';
            echo ">";

            echo '</div>';

            echo '</div>';

            if($next){
                files1($template,$file_struct["id"][$bzm],$id,$colid,($rec+1));
            }
        }
    }

    if($LEVEL){
        echo '</div>';
    }
}
